{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/v.png","path":"img/v.png","modified":1,"renderable":0},{"_id":"source/img/v2.JPG","path":"img/v2.JPG","modified":1,"renderable":0},{"_id":"source/img/alipay-reward-image.jpeg","path":"img/alipay-reward-image.jpeg","modified":1,"renderable":0},{"_id":"source/img/wechat-reward-image.jpeg","path":"img/wechat-reward-image.jpeg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"80b438ade74e53ed1aedd4e9edc1c5552fd674a2","modified":1494939448000},{"_id":"source/CNAME","hash":"fc5eb27d9983c22026ff862c712ef9ccc3250380","modified":1496124713000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1494855279000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1494855279000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1494855279000},{"_id":"themes/next/.gitignore","hash":"32ea93f21d8693d5d8fa4eef1c51a21ad0670047","modified":1494855279000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1494855279000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1494855279000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1494855279000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1494855279000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1494855279000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1494855279000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1494855279000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1494855279000},{"_id":"themes/next/_config.yml","hash":"cf20cc55f1d10c16a5cd05ddde689a5ac5c6e6a6","modified":1494940736000},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1494855279000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1494855279000},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1494855279000},{"_id":"source/_posts/CSS3实现曲线阴影和翘边阴影.md","hash":"8bce79228c19c5216c04c50ba42fea23c3a4c667","modified":1494941002000},{"_id":"source/_posts/.DS_Store","hash":"4ed639ca567eb7eba9a19a3a8c57da0b009f2b99","modified":1489369999000},{"_id":"source/_posts/NexT接入网易云更贴.md","hash":"a4a801daf09ef0f071789e7ddb83f7abacaf8be6","modified":1494941028000},{"_id":"source/_posts/hello-world.md","hash":"fe8cbfa631d92e24293188d545b70dbc6ec31b6d","modified":1494936709000},{"_id":"source/_posts/iframe父子页面间通信总结.md","hash":"e2ff84f386a901e85ab586a0e4bfa1cba1be8764","modified":1494941304000},{"_id":"source/_posts/openVPN连接多个地址失败【填坑】.md","hash":"419142fbb78fed2b77ba79fbd940ef809aca0070","modified":1494941311000},{"_id":"source/_posts/前端国际化小结.md","hash":"2ff8e11fa94f5b1afef55869f6004a31b760967c","modified":1496124642000},{"_id":"source/_posts/封装原生ajax.md","hash":"a225a47f9addd5d863265e0b3ae70d6d6134def7","modified":1494941020000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"b8c33bdd814fea4c4d6385945dcfcd089ea5e09b","modified":1494905458000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1494855279000},{"_id":"themes/next/.git/ORIG_HEAD","hash":"f6fbd6961a37e7fcf4a1afacee916a1080c7cadc","modified":1494905458000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1494855279000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1494855057000},{"_id":"themes/next/.git/index","hash":"2ecf91518c711ecb2732c6dbb5dd7ae0175ba5d2","modified":1496121220000},{"_id":"themes/next/.git/packed-refs","hash":"c0cb84132939c6ea723c7ff9672049f95c948f4b","modified":1494855279000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1494855279000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"fdd63b77472612337309eb93ec415a059b90756b","modified":1494855279000},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1494855279000},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1494855279000},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1494855279000},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1494855279000},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1494855279000},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1494855279000},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1494855279000},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1494855279000},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1494855279000},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1494855279000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1494855279000},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1494855279000},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1494855279000},{"_id":"themes/next/layout/_layout.swig","hash":"9d1a23a6add6f3d0f88c2d17979956f14aaa37a4","modified":1494855279000},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1494855279000},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1494855279000},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1494855279000},{"_id":"themes/next/layout/page.swig","hash":"2c6a78999133b991d9221f484aee2eacae894251","modified":1494855279000},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1494855279000},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1494855279000},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1494855279000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1494855279000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1494855279000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1494855280000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1494855280000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1494855280000},{"_id":"source/img/v.png","hash":"23073b98ead868679500ced96955f3bfe509d65a","modified":1494939470000},{"_id":"source/img/v2.JPG","hash":"7e66272369c96d495910a96f472b49769297629f","modified":1496121485000},{"_id":"source/img/alipay-reward-image.jpeg","hash":"3a093b3c60f01e204c75316d7de2e023507f5cec","modified":1494935436000},{"_id":"source/img/wechat-reward-image.jpeg","hash":"be49695776338e6392f86ae5f5b7da47fe520a3c","modified":1494935435000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855280000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1494855057000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1494855057000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1494855057000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1494855057000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1494855057000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1494855057000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1494855057000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1494855057000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1494855057000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1494855057000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1494855057000},{"_id":"themes/next/.git/logs/HEAD","hash":"22c226d1727fd1550f0c6d0e6783358d2ed223c6","modified":1494855279000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1494855279000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1494855279000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1494855279000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1494855279000},{"_id":"themes/next/layout/_partials/head.swig","hash":"d4a05c51aac02f1f6248baccf2ddb8ee12b9122f","modified":1494855279000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1494855279000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1494855279000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1494855279000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1494855279000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1494855279000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1494855279000},{"_id":"themes/next/layout/_macro/post.swig","hash":"c00261ee0dca8ef7d3f7753e8f8cd444f51118c4","modified":1494855279000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1494855279000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1494855279000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1494855279000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1494855279000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1494855279000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1494855279000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1494855279000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1494855279000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1494855279000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1494855279000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1494855279000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1494855279000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1494855279000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1494855279000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1494855279000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1494855279000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1494855279000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1494855280000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1494855280000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1494855280000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1494855280000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1494855280000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1494855280000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1494855280000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1494855280000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1494855280000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1494855280000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1494855280000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1494855280000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1494855280000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1494855280000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1494855280000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855279000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855279000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855279000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855279000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855279000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494855280000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494940948000},{"_id":"themes/next/.git/refs/heads/master","hash":"f6fbd6961a37e7fcf4a1afacee916a1080c7cadc","modified":1494855279000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1494855279000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1494855279000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1494855279000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1494855279000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1494855279000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1494855279000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1494855279000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1494855279000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1494855279000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1494855279000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1494855279000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1494855279000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1494855279000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1494855279000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1494855279000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"1f349aa30dd1f7022f7d07a1f085eea5ace3f26d","modified":1494855279000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1494855279000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1494855279000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1494855279000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1494855279000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1494855280000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1494855280000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1494855280000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1494855280000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1494855280000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1494855280000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1494855280000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1494855280000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1494855280000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1494855280000},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1494855280000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1494855280000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1494855280000},{"_id":"themes/next/source/js/src/utils.js","hash":"803f684fa7d0e729115a48851023a31f6fb6d0a7","modified":1494855280000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1494855280000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1494855280000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1494855280000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1494855280000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1494855280000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1494855280000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1494855280000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1494855280000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1494855280000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"22c226d1727fd1550f0c6d0e6783358d2ed223c6","modified":1494855279000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1494855279000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1494855279000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1494855279000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1494855279000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1494855279000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1494855279000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1494855279000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1494855279000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1494855280000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1494855280000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1494855280000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1494855280000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1494855280000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1494855280000},{"_id":"themes/next/.git/objects/pack/pack-06fb387ad39b98b8075b0962adccb1ce1076a30a.idx","hash":"2154fa95fb3bb48cb8ee57692d16f4ec1dc2c928","modified":1494855279000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1494855280000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1494855280000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"22c226d1727fd1550f0c6d0e6783358d2ed223c6","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"dbc07ec641a537df5918b41ce40a6466712a44f6","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"c089419916988d0f51d89b225460fe11b631e0a3","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1494855279000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1494855279000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1494855280000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1494855280000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1494855280000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1494855280000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1494855280000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1494855280000},{"_id":"themes/next/.git/objects/pack/pack-06fb387ad39b98b8075b0962adccb1ce1076a30a.pack","hash":"3b9c9173d7f75c35bb7a8aa98076a6398fe5013e","modified":1494855279000},{"_id":"public/2017/05/16/NexT接入网易云更贴/index.html","hash":"b3ad9640e5ffbf1240eb127efa80c2072ff5605c","modified":1496124719429},{"_id":"public/archives/index.html","hash":"724441dbf8385750cc2135cabb7ef7b2df41c44c","modified":1496124719430},{"_id":"public/archives/2014/index.html","hash":"19cf5b80198a184eb94c7f0dc57589711d2d297c","modified":1496124719430},{"_id":"public/archives/2014/05/index.html","hash":"3ff9da222b9f48f41e300dce7876e637bc94a691","modified":1496124719430},{"_id":"public/archives/2015/index.html","hash":"240f20a7c3e325035f1e42b71192eff4f12368b3","modified":1496124719430},{"_id":"public/archives/2015/10/index.html","hash":"4104765ea9ec6d8a792acf5a756631b7417d6e43","modified":1496124719430},{"_id":"public/archives/2015/12/index.html","hash":"4d60906d9cc40207c46aabdd54ffcf2e653c6bab","modified":1496124719431},{"_id":"public/archives/2016/index.html","hash":"9cd671ba9d5259525fe37ae15c912de3d7f720cf","modified":1496124719431},{"_id":"public/archives/2016/02/index.html","hash":"fe69093b5e4b34803c7e565fb11fba501173574d","modified":1496124719431},{"_id":"public/archives/2016/10/index.html","hash":"6500297823ae8dbd07342b0c382f900d06cba9d7","modified":1496124719431},{"_id":"public/archives/2016/12/index.html","hash":"01f9df6bfc68de870ca5c08df4bccee74276abc6","modified":1496124719431},{"_id":"public/archives/2017/index.html","hash":"1d831d3b440498ab143786f3baafe8e6948f0cee","modified":1496124719431},{"_id":"public/archives/2017/05/index.html","hash":"f79111b8d0a4265d0d3599db0d6139c0c9e5600c","modified":1496124719431},{"_id":"public/tags/css/index.html","hash":"2c7a827c35e0b3b8696b1171470236b91d540f8e","modified":1496124719431},{"_id":"public/tags/hexo/index.html","hash":"21fd53667fb3e0deb328ee18720a5d0db0d44a44","modified":1496124719432},{"_id":"public/tags/openVPN/index.html","hash":"9b9a308fd7ee3275bc239c58455149668e4a2643","modified":1496124719432},{"_id":"public/tags/国际化/index.html","hash":"ea0b1941c389d7886788f9359ab694b8b0ac5aa9","modified":1496124719432},{"_id":"public/2016/12/17/前端国际化小结/index.html","hash":"8c2a68285ccb867393c5b98c787e2d10587d5d71","modified":1496124719432},{"_id":"public/2016/10/10/CSS3实现曲线阴影和翘边阴影/index.html","hash":"6fc0a6712ad01948dc38f2b0f11a9454f4a712be","modified":1496124719432},{"_id":"public/2016/02/02/封装原生ajax/index.html","hash":"0fa6cf4da15b40093257423f3d11bd2db1a0e6a9","modified":1496124719432},{"_id":"public/2015/12/18/openVPN连接多个地址失败【填坑】/index.html","hash":"dfc530291036c2fb0877f829466e07041717f447","modified":1496124719432},{"_id":"public/2015/10/09/iframe父子页面间通信总结/index.html","hash":"d8e81c2a4166de9ec126df2635b1b0f063be5a48","modified":1496124719432},{"_id":"public/2014/05/16/hello-world/index.html","hash":"05de249c3cb9f264f0d56d09d215173fe63eae1b","modified":1496124719432},{"_id":"public/index.html","hash":"f541ac927f7977b02f870e19b9a59dd3726eb318","modified":1496124719432},{"_id":"public/tags/ajax/index.html","hash":"7a4296bf99c72decf7e0aa86ce01744a99b992f2","modified":1496124719484},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1496124719524},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1496124719524},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1496124719524},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1496124719524},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1496124719524},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1496124719524},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1496124719524},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1496124719524},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1496124719524},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1496124719524},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1496124719524},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1496124719524},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1496124719524},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1496124719524},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1496124719524},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1496124719524},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1496124719524},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1496124719524},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1496124719525},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1496124719525},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1496124719525},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1496124719525},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1496124719525},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1496124719525},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1496124719525},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1496124719525},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1496124719525},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1496124719525},{"_id":"public/CNAME","hash":"fc5eb27d9983c22026ff862c712ef9ccc3250380","modified":1496124719525},{"_id":"public/img/v.png","hash":"23073b98ead868679500ced96955f3bfe509d65a","modified":1496124720131},{"_id":"public/img/v2.JPG","hash":"7e66272369c96d495910a96f472b49769297629f","modified":1496124720133},{"_id":"public/img/alipay-reward-image.jpeg","hash":"3a093b3c60f01e204c75316d7de2e023507f5cec","modified":1496124720153},{"_id":"public/img/wechat-reward-image.jpeg","hash":"be49695776338e6392f86ae5f5b7da47fe520a3c","modified":1496124720153},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1496124720153},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1496124720153},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1496124720161},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1496124720161},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1496124720161},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1496124720161},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1496124720162},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1496124720162},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1496124720162},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1496124720162},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1496124720162},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1496124720162},{"_id":"public/js/src/utils.js","hash":"803f684fa7d0e729115a48851023a31f6fb6d0a7","modified":1496124720162},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1496124720162},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1496124720163},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1496124720163},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1496124720163},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1496124720163},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1496124720163},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1496124720163},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1496124720163},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1496124720163},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1496124720163},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1496124720163},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1496124720163},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1496124720163},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1496124720164},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1496124720164},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1496124720164},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1496124720164},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1496124720164},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1496124720164},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1496124720164},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1496124720164},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1496124720164},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1496124720164},{"_id":"public/css/main.css","hash":"d5bcd73ae93545880beb87176772d7c2df0daf4e","modified":1496124720164},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1496124720164},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1496124720164},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1496124720164},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1496124720164},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1496124720164},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1496124720165},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1496124720165},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1496124720165},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1496124720165},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1496124720165},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1496124720165},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1496124720165},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1496124720165},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1496124720165},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1496124720165},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1496124720165},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1496124720165},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1496124720165},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1496124720165},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1496124720166},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1496124720166},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1496124720211}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CSS3实现曲线阴影和翘边阴影","date":"2016-10-10T00:00:00.000Z","_content":"> 往往我们在做一些特殊的阴影效果的时候，使用图片做背景的方式实际上是很差劲的，在不考虑适配老版本浏览器的前提下，我们可以使用css3的自定义出自己想要的阴影风格。\n\n下面将以曲线阴影和翘边阴影为例，讲解自定义阴影的过程。\n先来看下效果图\n![这里写图片描述](http://img.blog.csdn.net/20161010191703289)\n\n##曲线阴影\n曲线阴影其实可以使用双层阴影重叠的方式实现\n我们将取消阴影的图片做下分解应该会更容易理解，示意图如下：\n![这里写图片描述](http://img.blog.csdn.net/20161010192148622)\n![这里写图片描述](http://img.blog.csdn.net/20161010192155873)\n如上图，图1基础的阴影下，在加一个有弧度的阴影即可。\n1、图1基础阴影很容易实现，内阴影+外阴影\n```\n.box-shadow1{\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n```\n2、然后使用伪类在元素的后面添加一个“可适配”的阴影，为了可适配，我们就要使用相对定位，实现代码如下\n```\n.box-shadow1{\n\tposition:relative;\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n.box-shadow1:after{\n\tcontent:\"\";\n\tposition:absolute;\n\tbackground:transparent;\n\ttop:50%; //设置宽高仅仅设置上下左右边距是为了让系统自动定位。\n\tbottom: 1px;\n\tleft: 10px;\n\tright: 10px; \n\tz-index: -1; //将副阴影置于主阴影下\n\tbox-shadow: 0 0 20px rgba(0,0,0,0.7); \n\tborder-radius: 100px/10px;\n}\n```\n如此即实现了曲线阴影的效果。\n```\n<div class=\"box box-shadow1\">将box-shadow1作为类使用即可</div>\n```\n\n##翘边阴影\n同理，翘边阴影可以在基础阴影下叠加两个平行四边形即可。\n这里就直接上分解图和源码了，不再做讲解\n![这里写图片描述](http://img.blog.csdn.net/20161010192148622)\n![这里写图片描述](http://img.blog.csdn.net/20161010194338026)\n![这里写图片描述](http://img.blog.csdn.net/20161010194354866)\n![这里写图片描述](http://img.blog.csdn.net/20161010194405741)\n\n```\n.box-shadow2{\n\tposition:relative;\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n.box-shadow2:before,.box-shadow2:after{\n\tcontent: \"\";\n\tposition:absolute; \n\ttop:20px;bottom: 22px;  \n\tbackground: transparent; \n\tbox-shadow: 0 8px 20px rgba(0,0,0,0.7);  \n\tz-index: -1; \n\tbackground: #fff; \n}\n.box-shadow2:before{ \n\tleft: 22px;  \n\tright:12px; \n\ttransform: skew(-12deg) rotate(-4deg); \n}\n.box-shadow2:after{  \n\tleft: 12px;  \n\tright:22px; \n\ttransform: skew(12deg) rotate(4deg); \n}\n```","source":"_posts/CSS3实现曲线阴影和翘边阴影.md","raw":"---\ntitle: CSS3实现曲线阴影和翘边阴影\ndate: 2016-10-10 08:00:00\ntags: \"css\"\n---\n> 往往我们在做一些特殊的阴影效果的时候，使用图片做背景的方式实际上是很差劲的，在不考虑适配老版本浏览器的前提下，我们可以使用css3的自定义出自己想要的阴影风格。\n\n下面将以曲线阴影和翘边阴影为例，讲解自定义阴影的过程。\n先来看下效果图\n![这里写图片描述](http://img.blog.csdn.net/20161010191703289)\n\n##曲线阴影\n曲线阴影其实可以使用双层阴影重叠的方式实现\n我们将取消阴影的图片做下分解应该会更容易理解，示意图如下：\n![这里写图片描述](http://img.blog.csdn.net/20161010192148622)\n![这里写图片描述](http://img.blog.csdn.net/20161010192155873)\n如上图，图1基础的阴影下，在加一个有弧度的阴影即可。\n1、图1基础阴影很容易实现，内阴影+外阴影\n```\n.box-shadow1{\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n```\n2、然后使用伪类在元素的后面添加一个“可适配”的阴影，为了可适配，我们就要使用相对定位，实现代码如下\n```\n.box-shadow1{\n\tposition:relative;\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n.box-shadow1:after{\n\tcontent:\"\";\n\tposition:absolute;\n\tbackground:transparent;\n\ttop:50%; //设置宽高仅仅设置上下左右边距是为了让系统自动定位。\n\tbottom: 1px;\n\tleft: 10px;\n\tright: 10px; \n\tz-index: -1; //将副阴影置于主阴影下\n\tbox-shadow: 0 0 20px rgba(0,0,0,0.7); \n\tborder-radius: 100px/10px;\n}\n```\n如此即实现了曲线阴影的效果。\n```\n<div class=\"box box-shadow1\">将box-shadow1作为类使用即可</div>\n```\n\n##翘边阴影\n同理，翘边阴影可以在基础阴影下叠加两个平行四边形即可。\n这里就直接上分解图和源码了，不再做讲解\n![这里写图片描述](http://img.blog.csdn.net/20161010192148622)\n![这里写图片描述](http://img.blog.csdn.net/20161010194338026)\n![这里写图片描述](http://img.blog.csdn.net/20161010194354866)\n![这里写图片描述](http://img.blog.csdn.net/20161010194405741)\n\n```\n.box-shadow2{\n\tposition:relative;\n\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;\n}\n.box-shadow2:before,.box-shadow2:after{\n\tcontent: \"\";\n\tposition:absolute; \n\ttop:20px;bottom: 22px;  \n\tbackground: transparent; \n\tbox-shadow: 0 8px 20px rgba(0,0,0,0.7);  \n\tz-index: -1; \n\tbackground: #fff; \n}\n.box-shadow2:before{ \n\tleft: 22px;  \n\tright:12px; \n\ttransform: skew(-12deg) rotate(-4deg); \n}\n.box-shadow2:after{  \n\tleft: 12px;  \n\tright:22px; \n\ttransform: skew(12deg) rotate(4deg); \n}\n```","slug":"CSS3实现曲线阴影和翘边阴影","published":1,"updated":"2017-05-16T13:23:22.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610qz0000xwxsi6sj41h1","content":"<blockquote>\n<p>往往我们在做一些特殊的阴影效果的时候，使用图片做背景的方式实际上是很差劲的，在不考虑适配老版本浏览器的前提下，我们可以使用css3的自定义出自己想要的阴影风格。</p>\n</blockquote>\n<p>下面将以曲线阴影和翘边阴影为例，讲解自定义阴影的过程。<br>先来看下效果图<br><img src=\"http://img.blog.csdn.net/20161010191703289\" alt=\"这里写图片描述\"></p>\n<p>##曲线阴影<br>曲线阴影其实可以使用双层阴影重叠的方式实现<br>我们将取消阴影的图片做下分解应该会更容易理解，示意图如下：<br><img src=\"http://img.blog.csdn.net/20161010192148622\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010192155873\" alt=\"这里写图片描述\"><br>如上图，图1基础的阴影下，在加一个有弧度的阴影即可。<br>1、图1基础阴影很容易实现，内阴影+外阴影<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow1&#123;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、然后使用伪类在元素的后面添加一个“可适配”的阴影，为了可适配，我们就要使用相对定位，实现代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow1&#123;</div><div class=\"line\">\tposition:relative;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow1:after&#123;</div><div class=\"line\">\tcontent:&quot;&quot;;</div><div class=\"line\">\tposition:absolute;</div><div class=\"line\">\tbackground:transparent;</div><div class=\"line\">\ttop:50%; //设置宽高仅仅设置上下左右边距是为了让系统自动定位。</div><div class=\"line\">\tbottom: 1px;</div><div class=\"line\">\tleft: 10px;</div><div class=\"line\">\tright: 10px; </div><div class=\"line\">\tz-index: -1; //将副阴影置于主阴影下</div><div class=\"line\">\tbox-shadow: 0 0 20px rgba(0,0,0,0.7); </div><div class=\"line\">\tborder-radius: 100px/10px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如此即实现了曲线阴影的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;box box-shadow1&quot;&gt;将box-shadow1作为类使用即可&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>##翘边阴影<br>同理，翘边阴影可以在基础阴影下叠加两个平行四边形即可。<br>这里就直接上分解图和源码了，不再做讲解<br><img src=\"http://img.blog.csdn.net/20161010192148622\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194338026\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194354866\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194405741\" alt=\"这里写图片描述\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow2&#123;</div><div class=\"line\">\tposition:relative;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:before,.box-shadow2:after&#123;</div><div class=\"line\">\tcontent: &quot;&quot;;</div><div class=\"line\">\tposition:absolute; </div><div class=\"line\">\ttop:20px;bottom: 22px;  </div><div class=\"line\">\tbackground: transparent; </div><div class=\"line\">\tbox-shadow: 0 8px 20px rgba(0,0,0,0.7);  </div><div class=\"line\">\tz-index: -1; </div><div class=\"line\">\tbackground: #fff; </div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:before&#123; </div><div class=\"line\">\tleft: 22px;  </div><div class=\"line\">\tright:12px; </div><div class=\"line\">\ttransform: skew(-12deg) rotate(-4deg); </div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:after&#123;  </div><div class=\"line\">\tleft: 12px;  </div><div class=\"line\">\tright:22px; </div><div class=\"line\">\ttransform: skew(12deg) rotate(4deg); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<blockquote>\n<p>往往我们在做一些特殊的阴影效果的时候，使用图片做背景的方式实际上是很差劲的，在不考虑适配老版本浏览器的前提下，我们可以使用css3的自定义出自己想要的阴影风格。</p>\n</blockquote>\n<p>下面将以曲线阴影和翘边阴影为例，讲解自定义阴影的过程。<br>先来看下效果图<br><img src=\"http://img.blog.csdn.net/20161010191703289\" alt=\"这里写图片描述\"></p>\n<p>##曲线阴影<br>曲线阴影其实可以使用双层阴影重叠的方式实现<br>我们将取消阴影的图片做下分解应该会更容易理解，示意图如下：<br><img src=\"http://img.blog.csdn.net/20161010192148622\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010192155873\" alt=\"这里写图片描述\"><br>如上图，图1基础的阴影下，在加一个有弧度的阴影即可。<br>1、图1基础阴影很容易实现，内阴影+外阴影<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow1&#123;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、然后使用伪类在元素的后面添加一个“可适配”的阴影，为了可适配，我们就要使用相对定位，实现代码如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow1&#123;</div><div class=\"line\">\tposition:relative;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow1:after&#123;</div><div class=\"line\">\tcontent:&quot;&quot;;</div><div class=\"line\">\tposition:absolute;</div><div class=\"line\">\tbackground:transparent;</div><div class=\"line\">\ttop:50%; //设置宽高仅仅设置上下左右边距是为了让系统自动定位。</div><div class=\"line\">\tbottom: 1px;</div><div class=\"line\">\tleft: 10px;</div><div class=\"line\">\tright: 10px; </div><div class=\"line\">\tz-index: -1; //将副阴影置于主阴影下</div><div class=\"line\">\tbox-shadow: 0 0 20px rgba(0,0,0,0.7); </div><div class=\"line\">\tborder-radius: 100px/10px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如此即实现了曲线阴影的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;box box-shadow1&quot;&gt;将box-shadow1作为类使用即可&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>##翘边阴影<br>同理，翘边阴影可以在基础阴影下叠加两个平行四边形即可。<br>这里就直接上分解图和源码了，不再做讲解<br><img src=\"http://img.blog.csdn.net/20161010192148622\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194338026\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194354866\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20161010194405741\" alt=\"这里写图片描述\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow2&#123;</div><div class=\"line\">\tposition:relative;</div><div class=\"line\">\tbox-shadow: 0 1px 4px rgba(0,0,0,0.3),0 0 40px rgba(0,0,0,0.1) inset;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:before,.box-shadow2:after&#123;</div><div class=\"line\">\tcontent: &quot;&quot;;</div><div class=\"line\">\tposition:absolute; </div><div class=\"line\">\ttop:20px;bottom: 22px;  </div><div class=\"line\">\tbackground: transparent; </div><div class=\"line\">\tbox-shadow: 0 8px 20px rgba(0,0,0,0.7);  </div><div class=\"line\">\tz-index: -1; </div><div class=\"line\">\tbackground: #fff; </div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:before&#123; </div><div class=\"line\">\tleft: 22px;  </div><div class=\"line\">\tright:12px; </div><div class=\"line\">\ttransform: skew(-12deg) rotate(-4deg); </div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow2:after&#123;  </div><div class=\"line\">\tleft: 12px;  </div><div class=\"line\">\tright:22px; </div><div class=\"line\">\ttransform: skew(12deg) rotate(4deg); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"NexT接入网易云更贴","date":"2017-05-16T12:04:49.000Z","_content":"","source":"_posts/NexT接入网易云更贴.md","raw":"---\ntitle: NexT接入网易云更贴\ndate: 2017-05-16 20:04:49\ntags: \"hexo\"\n---\n","slug":"NexT接入网易云更贴","published":1,"updated":"2017-05-16T13:23:48.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610r30001xwxsmbe2b01j","content":"","excerpt":"","more":""},{"title":"Hello World","date":"2014-05-16T12:04:49.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2014-05-16 20:04:49\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-05-16T12:11:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610r90003xwxs496gctqj","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"iframe父子页面间通信总结","date":"2015-10-08T16:00:00.000Z","_content":"随着网页结构的复杂化，页面内嵌frame越来越常见，但不管是作为内容页来显示，还是作为组件模块嵌入，都有父子页面间通信的需求可能，因此为了更好的实现需求就必须了解父子页面间的通信。\n\niframe子页面与父页面通信根据iframe中src属性是同域链接还是跨域链接，通信方式也不同。\n\n##同域下父子页面的通信\n\n页面间通信常以页面间调用实现，包括以下几个方面：（调用包含html dom，js全局变量，js方法）\n\n- 父页面调用子iframe页面；\n- 子iframe页面调用父页面；\n- 主页面内兄弟iframe页面之间相互调用；\n\n*下面我们详细分析*\n###父页面调用子iframe\n\n```\n\n<iframe name=\"iframeName\" id=\"iframeId\" src=\"child.html\"></iframe>\n\n/**\n*1、通过iframe的ID获取子页面的dom，然后通过内置属性contentWindow取得子窗口的window对象\n*   此方法兼容各个浏览器\n*/\ndocument.getElementById('iframeId').contentWindow.func(); \ndocument.getElementById('iframeId').contentWindow.document.getElementById('子页面中的元素ID');\n\n/**\n*2、通过iframe的name（名字）直接获取子窗口的window对象\n*/\niframeName.window.func(); \niframeName.window.document.getElementById('子页面中的元素ID'); \n\n/**\n*3、通过window对象的frames[]数组对象直接获取子frame对象\n*/\nwindow.frames[0].func();\nwindow.frames[0].document.getElementById('子页面中的元素ID');\n//或\nwindow.frames[\"iframeName\"].func();\nwindow.frames[\"iframeName\"].document.getElementById('子页面中的元素ID');\n\n```\n\n###子iframe页面调用父页面\n\n```\n/**\n*通过parent或top对象获取父页面的window对象内元素及方法\n*/\nparent.window.func(); \nparent.window.document.getElementById('父页面中的元素ID');\n//同理\ntop.window.func(); \ntop.window.document.getElementById('父页面中的元素ID');\n```\n###页面内兄弟iframe页面相互调用\n其实任意页面间通信是类似的，根据上面两个方法组合就可以实现页面内兄弟iframe页面相互调用\n\n> 原理：在子页面中获取父页面（parent）或顶层页面（top）的window元素，然后再根据兄弟iframe的name或id获取兄弟页面的window对象，得到window对象后就可以随意操作了。\n\n```\n/*以下为在child1.html页面内访问兄弟frame页面*/\n<iframe name=\"iframe1Name\" id=\"iframe1Id\" src=\"child1.html\"></iframe>\n<iframe name=\"iframe2Name\" id=\"iframe2Id\" src=\"child2.html\"></iframe>\n<iframe name=\"iframe3Name\" id=\"iframe3Id\" src=\"child3.html\"></iframe>\n\n/**\n*1、通过兄弟iframe的ID获取其dom，然后通过内置属性contentWindow取得window对象\n*   此方法兼容各个浏览器\n*/\nparent.window.document.getElementById('iframe2Id').contentWindow.func(); \nparent.window.document.getElementById('iframe3Id').contentWindow.document.getElementById('兄弟页面3中的元素ID');\n\n/**\n*2、通过iframe的name（名字）直接获取子窗口的window对象\n*/\nparent.window.iframe2Name.window.func(); \nparent.window.iframe3Name.window.document.getElementById('兄弟页面3中的元素ID'); \n\n/**\n*3、通过window对象的frames[]数组对象直接获取子frame对象\n*/\nparent.window.frames[1].func();\ntop.window.frames[2].document.getElementById('兄弟页面3中的元素ID');\n//或\nparent.window.frames[\"iframe2Name\"].func();\nparent.window.frames[\"iframe3Name\"].document.getElementById('兄弟页面3中的元素ID');\n\n```\n\n##跨域下父子页面的通信\n\n###父页面向子页面传递数据\n如果iframe所链接的是外部页面，因为安全机制就不能使用同域名下的通信方式了。\n\n实现的技巧是利用location对象的hash值，通过它传递通信数据。在父页面设置iframe的src后面多加个data字符串，然后在子页面中通过某种方式能即时的获取到这儿的data就可以了，例如：\n\n1. 在子页面中通过setInterval方法设置定时器，监听location.href的变化即可获得上面的data信息\n\n2. 然后子页面根据这个data信息进行相应的逻辑处理\n\n###子页面向父页面传递数据\n\n实现技巧就是利用一个代理iframe，它嵌入到子页面中，并且和父页面必须保持是同域，然后通过它充分利用上面第一种通信方式的实现原理就把子页面的数据传递给代理iframe，然后由于代理的iframe和主页面是同域的，所以主页面就可以利用同域的方式获取到这些数据。使用 window.top或者window.parent.parent获取浏览器最顶层window对象的引用。\n\n\n\n###详解\n>此段博文转自[http://tid.tenpay.com/?p=4695](http://tid.tenpay.com/?p=4695)感谢作者lyndon\n\n*先来看看哪些情况下才存在跨域的问题*\n\n|编号|URL|说明|是否允许通信|\n|:-:|:--:|:--:|:--------:|\n|1| http://www.a.com/a.js<br/>http://www.a.com/b.js|同一域名下|允许|\n|2| http://www.a.com/a/a.js<br/>http://www.a.com/b/b.js|同一域名下不同文件夹|允许|\n|3| http://www.a.com:8000/a.js<br/>http://www.a.com/b.js|同一域名，不同端口|不允许|\n|4| http://www.a.com/a.js<br/>https://www.a.com/b.js|同一域名，不同协议|不允许|\n|5| http://www.a.com/a.js<br/>http://127.0.0.1/b.js|域名和域名对应ip|不允许|\n|6| http://www.a.com/a.js<br/>http://will.a.com/b.js|主域相同，子域不同|不允许|\n|7| http://www.a.com/a.js<br/>http://a.com/b.js|同一域名，不同二级域名（同上）|不允许（cookie这种情况下也不允许访问）|\n|8| http://www.a.com/a.js<br/>http://www.b.com/b.js|不同域名|不允许|\n\n其中编号6、7两种情况同属于主域名相同的情况，可以设置domain来解决问题，今天就不讨论这种情况了。 对于其他跨域通信的问题，我想又可以分成两类，**其一（第一种情况）**是a.com下面的a.js试图请求b.com下某个接口时产生的跨域问题。**其二（第二种情况）**是当a.com与b.com下面的页面成父子页面关系时试图互相通信时产生的跨域问题，典型的应用场景如a.com/a.html使用iframe内嵌了b.com/b.html，大家都知道a.html内的js脚本试图访问b.html时是会被拒绝的，反之亦然。**第一种情况**，目前主流的方案是JSONP，高版本浏览器支持html5的话，还可以使用XHR2支持跨域通信的新特性。**第二种情况**，目前主要是通过代理页面或者使用postMessageAPI来做，这也是今天要讨论的话题。 第二种情况，有这样一些类似的案例：a.com/a.html使用iframe内嵌了b.com/b.html，现在希望iframe的高度能自动适应b.html的高度，使iframe不要出现滚动条。我们都知道跨域了，a.html是没办法直接读取到b.html的高度的，b.html也没办法把自己的高度告诉a.html。 直接说可以用代理页面的方法搞定这个问题吧，但是怎么代理法，先来看下面这张图：\n![这里写图片描述](http://img.blog.csdn.net/20151009182823247)\nb.html与a.html是不能直接通信的。我们可以在b.html下面再iframe内嵌一个proxy.html页面，因为这个页面是放在a.com下面的，与a.html同域，所以它其实是可以和a.html直接通信的，假如a.html里面有定义一个方法_callback，在proxy.html可以直接top._callback()调用它。但是b.html本身和proxy.html也是不能直接通信的，所谓代理页面的桥梁作用怎么实现呢? b.html内嵌proxy.html是通过一段类似下面这样的代码： \n```\n<iframe id=”proxy” src=”a.com/proxy.html” name=”proxy” frameborder=”0″ width=”0″ height=”0″></iframe>\n``` \n这个iframe的src属性b.html是有权限控制的。如果它把src设置成a.com/proxy.html?args=XXX,也就是给url加一个查询字符串，proxy.html内的js是可以读取到的。对的，这个url的查询字符串就是b.html和proxy.html之间通信的桥梁，美中不足的是每次通信都要重写一次url造成一次网络请求，这有时会对服务器及页面的运行效率产生很大的影响。同时由于参数是通过url来传递的，会有长度和数据类型的限制，搜集的资料显示：\n\n>- IE浏览器对URL的长度现限制为2048字节。 \n>- 360极速浏览器对URL的长度限制为2118字节。 \n>- Firefox(Browser)对URL的长度限制为65536字节。 \n>- Safari(Browser)对URL的长度限制为80000字节。 \n>- Opera(Browser)对URL的长度限制为190000字节。 \n>- Google(chrome)对URL的长度限制为8182字节。\n\n上面的方法，通过迂回战术实现了b.html跟a.html通信，但是倒过来，a.html怎么跟b.html通信呢?嵌入在b.html里面的proxy.html可以用top快速的联系上a.html，但是要想让a.html找到proxy.html就不容易了，夹在中间的 b.html生生把它们分开了，a.html没法让b.html去找到proxy.html然后返回给它。只能采用更迂回的战术了。 顺着前面b.html到a.html的通信过程，逆向的想一下，虽然a.html没有办法主动找到proxy.html，但是proxy.html可以反过来告诉a.html它在哪里： 在proxy.html加这么一段脚本：\n\n```\nvar topWin = top;  \nfunction getMessage(data) {  \n    alert(\"messageFormTopWin:\" + data);  \n}  \nfunction sendMessage(data) {  \n    topWin.proxyWin = window;  \n    topWin.getMessage(data);  \n} \n```\n在a.html加这么一段脚本：\n```\nvar proxyWin = null;  \nfunction getMessage(data) {  \n   alert(\"messageFormProxyWin:\"+data);  \n   sendMessage(\"top has receive data:\"+data);  \n}  \nfunction sendMessage(data) {  \n    if (null != proxyWin) {  \n        proxyWin.getMessage(data);  \n    }  \n} \n```\n也就是必须由proxy.html先主动发送一个消息给a.html，a.html得到proxy.html页面window的引用，就可以反过来向它发送请求了。 现在a.html可以把消息发给proxy.html了，但是proxy.html怎么把消息转送到b.html？似乎这才是难点，因为它们之间才真正有着“跨域”这一道鸿沟。 这回我们不再用前面那个iframe内嵌代理页面的方法再在proxy.html内嵌一个b.com下面的代理页面了，这样实在会给人感觉嵌的太深了，四层。但是为了跨越这道鸿沟，b.com下面也加一个代理页面是免不的。不过现在我们要利用一下window.name。window.name有一个特性，就是页面在同一个浏览器窗口（标签页）中跳转时，它一直存在而且值不会改变。比如我们在a.html中设置了window.name=”a”,然后location.href=”http://b.com/b.html”跳转后，b.html可以读取window.name的值为”a”;而且window.name的值长度一般可以到达2M，ie和firefox甚至可以达到32M，这样的存储容量，足够利用起来做跨域的数据传递了。好吧，我们现在要做的就是当proxy.html拿到a.html发送过来的数据后把这个数据写入window.name中，然后跳转到b.com下面的代理页面，我们这里假设是bproxy.html。bproxy.html读取到window.name值后，通知给它父页面b.html就简单了。我们再来看这个过程可以用图大概示意一下：\n![这里写图片描述](http://img.blog.csdn.net/20151009183805363)\n图例中绿色的双向箭头表示可以通信，橙色的双向箭头表示不能直接通信。 最后我们简单看一下双向通信的实测效果：\n![这里写图片描述](http://img.blog.csdn.net/20151009183823009)\nb.html每次加载的时候都先给a.html发一个”连接请求”，让a.html可以找到proxy.html。所以页面第一次加载的时候会产生三个请求：\n![这里写图片描述](http://img.blog.csdn.net/20151009183840678)\n每次b.html向a.html发送消息的时候会产生一个请求：\n![这里写图片描述](http://img.blog.csdn.net/20151009183858566)\n每次a.html向b.html发送消息的时候会产生两个请求，其中一个是a.com/proxy.html向b.com/bproxy.html跳转产生的，另一个是b.html重新向a.html发起“连接请求”时产生的：\n![这里写图片描述](http://img.blog.csdn.net/20151009183913229)\n\n最后简单看一下实测的几个测试页面代码： \n*代码片段一，a.com/a.html:*\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\">  \n<head>  \n   <title>a.com</title>  \n</head>  \n<body>  \n    <div id=\"Div1\">  \n        A.com/a.html</div>  \n    <input id=\"txt_msg\" type=\"text\" />  \n    <input id=\"Button1\" type=\"button\" value=\"向b.com/b.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" />  \n    <div id=\"div_msg\">  \n    </div>  \n    <iframe width=\"800\" height=\"400\" id=\"mainFrame\" src=\"<A href=\"http://localhost:8091/b.com/b.htm\">http://localhost:8091/b.com/b.htm</A>\">  \n    </iframe>  \n    <script type=\"text/javascript\"> \n        var proxyWin = null;  \n        function showMsg(msg) {  \n            document.getElementById(\"div_msg\").innerHTML = msg;  \n        }  \n        function getMessage(data) {  \n            showMsg(\"messageForm b.html to ProxyWin:\" + data);  \n        }  \n        function sendMessage(data) {  \n            if (null != proxyWin) {  \n                proxyWin.getMessage(data);  \n            }  \n        }  \n    </script> \n</body>  \n</html> \n```\n*代码片段二，a.com/proxy.html:*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>a.com</title>\n</head>\n<body>\n<div id=\"Div1\">A.com/proxy.html</div>\n<div id=\"div_msg\"></div>\n<script type=\"text/javascript\">\n    var topWin = top;\n    function showMsg(msg) {\n        document.getElementById(\"div_msg\").innerHTML = msg;\n    }\n\n    function getMessage(data) {\n        showMsg(\"messageForm A.com/a.html:\" + data + \"<br/>两秒后将跳转到B.com/bproxy.html\");\n        window.name = data;\n        setTimeout(function () { location.href = \"<a href=\"http://localhost:8091/b.com/bproxy.htm\">http://localhost:8091/b.com/bproxy.htm</a>\" }, 2000);// 为了能让大家看到跳转的过程，所以加了个延时\n    }\n\n    function sendMessage(data) {\n        topWin.proxyWin = window;\n        topWin.getMessage(data);\n    }\n\n    var search = location.search.substring(1);\n    showMsg(\"messageForm B.com/b.html:\" + search);\n    sendMessage(search);\n    </script>\n</body>\n</html>\n```\n*代码片段三，b.com/b.html*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>b.com</title>\n</head>\n<body>\n    <div id=\"Div1\">\n        B.com/b.html</div>\n    <input id=\"txt_msg\" type=\"text\" />\n    <input id=\"Button1\" type=\"button\" value=\"向A.com/a.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" />\n    <div id=\"div_msg\">\n    </div>\n    <iframe id=\"proxy\" name=\"proxy\" style=\"width: 600px; height: 300px\"></iframe>\n    <script type=\"text/javascript\">\n        function showMsg(msg) {\n            document.getElementById(\"div_msg\").innerHTML = msg;\n        }\n        function sendMessage(data) {\n            var proxy = document.getElementById(\"proxy\");\n            proxy.src=\"<A href=\"http://localhost:8090/a.com/proxy.htm?data\">http://localhost:8090/a.com/proxy.htm?data</A>=\" + data;\n        }\n        function connect() {\n            sendMessage(\"connect\");\n        }\n        function getMessage(data) {\n            showMsg(\"messageForm a.html to ProxyWin:\" + data);\n            connect();\n        }\n\n        connect(); // 页面一加载，就执行一次连接\n    </script>\n</body>\n</html>\n```\n*代码片段四，b.com/bproxy.html*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>b.com</title>\n</head>\n<body>\n    <div id=\"Div1\">\n        B.com/bproxy.html</div>\n    <div id=\"div_msg\">\n    </div>\n    <script type=\"text/javascript\">\n        var parentWin = parent;\n        var data = null;\n\n        function getMessage() {\n            if (window.name) {\n                data = window.name;\n                parentWin.getMessage(data);\n            }\n            document.getElementById(\"div_msg\").innerHTML = \"messageForm a.com/proxy.html:\" + data;\n\n        }\n        getMessage();         \n    </script>\n</body>\n</html>\n```\n好吧，现在我必须把话锋调转一下了。前面讲的这么多，也只是抛出来一些之前我们可能会采用的跨域通信方法，事实上代理页面、url传参数和window.name、甚至还有一些利用url的hash值的跨域传值方法，都能百度到不少相关资料。但它们都逃不开代理页面，也就不可避免的要产生网络请求，而事实上这并不是我们的本意，我们原本希望它们能够直接在客户端通信，避免不必要的网络请求开销——这些开销，在访问量超大的站点可能会对服务器产生相当大的压力。那么，有没有更完美一点的替代方案呢？ 必须给大家推荐postMessage。postMessage 正是为了满足一些合理的、不同站点之间的内容能在浏览器端进行交互的需求而设计的。利用postMessage API实现跨域通信非常简单，我们直接看一下实例的代码： \n*代码片段五，A.com/a.html：*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head runat=\"server\">\n    <title>A.com/a.html</title>\n    <script type=\"text/javascript\">\n        var trustedOrigin = \"<A href=\"http://localhost:8091/\">http://localhost:8091</A>\";\n\n        function messageHandler(e) {\n            if (e.origin == trustedOrigin) {//接收消息的时候，判断消息是否来自可信的源，这个源是否可信则完全看自己的定义了。\n                showMsg(e.data);//e.data才是真实要传递的数据\n            } else {\n                // ignore messages from other origins\n            }\n        }\n\n        function sendString(s) {//发送消息\n            document.getElementById(\"widget\").contentWindow.postMessage(s, trustedOrigin);\n        }\n\n        function showMsg(message) {\n            document.getElementById(\"status\").innerHTML = message;\n        }\n\n        function sendStatus() {\n            var statusText = document.getElementById(\"statusText\").value;\n            sendString(statusText);\n        }\n\n        function loadDemo() {\n            addEvent(document.getElementById(\"sendButton\"), \"click\", sendStatus);\n            sendStatus();\n        }\n\n        function addEvent(obj, trigger, fun) {\n            if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n            else if (obj.attachEvent) obj.attachEvent('on' + trigger, fun);\n            else obj['on' + trigger] = fun;\n        }\n        addEvent(window, \"load\", loadDemo);\n        addEvent(window, \"message\", messageHandler);\n\n    </script>\n</head>\n<body>\n    <h1>A.com/a.html</h1>\n    <p><b>源</b>: <A href=\"http://localhost:8090</p\">http://localhost:8090</p</A>>\n    <input type=\"text\" id=\"statusText\" value=\"msg from a.com/a.html\">\n    <button id=\"sendButton\">向b.com/b.html发送消息</button>\n    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p>\n    <iframe id=\"widget\" width=\"800\" height=\"400\" src=\"<A href=\"http://localhost:8091/PostMessage/Default.aspx%22%3E%3C/iframe\">http://localhost:8091/PostMessage/Default.aspx\"></iframe</A>>\n</body>\n</html>\n```\n*代码片段六，B.com/b.html：*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head runat=\"server\">\n    <title>B.com/b.html</title>\n    <script type=\"text/javascript\">\n        //检查postMessage 是否可以用：window.postMessage===undefined\n        //定义信任的消息源\n        var trustedOrigin = \"<A href=\"http://localhost:8090/\">http://localhost:8090</A>\";\n        function messageHandler(e) {\n            if (e.origin === \"<A href=\"http://localhost:8090/\">http://localhost:8090</A>\") {\n                showMsg(e.data);\n            } else {\n                // ignore messages from other origins\n            }\n        }\n\n        function sendString(s) {\n            window.top.postMessage(s, trustedOrigin); //第二个参数是消息传送的目的地\n        }\n\n        function loadDemo() {\n            addEvent(document.getElementById(\"actionButton\"), \"click\", function () {\n                var messageText = document.getElementById(\"messageText\").value;\n                sendString(messageText);\n            });\n        }\n\n        function showMsg(message) {\n            document.getElementById(\"status\").innerHTML = message;\n        }\n\n        function addEvent(obj, trigger, fun) {\n            if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n            else if (obj.attachEvent) obj.attachEvent('on' + trigger, fun);\n            else obj['on' + trigger] = fun;\n        }\n        addEvent(window, \"load\", loadDemo);\n        addEvent(window, \"message\", messageHandler);\n    </script>\n</head>\n<body>\n    <h1>B.com/b.html</h1>\n    <p><b>源</b>: <A href=\"http://localhost:8091</p\">http://localhost:8091</p</A>>\n    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p>\n            <div>\n                <input type=\"text\" id=\"messageText\" value=\"msg from b.com/b.html\">\n                <button id=\"actionButton\"> 向a.com/a.html发送一个消息</button>\n            </div>\n</body>\n</html>\n```\n代码的关键是message事件是一个拥有data（数据）和origin(来源)属性的DOM事件。data属性是发送的实际数据，origin属性是发送来源。Origin属性很关键，有了这个属性，接收方可以轻易的忽略掉来自不可信源的消息，也就能有效避免跨域通信这个开口给我们的源安全带来的隐患。接口很强大，所以代码很简单。我们可以抓包看一下，这个通信过程完全是在浏览器端的，没有产生任何的网络请求。同时这个接口目前已经得到了绝大多数浏览器的支持，包括IE8及以上版本，参见下面的图表：\n![这里写图片描述](http://img.blog.csdn.net/20151009184516692)\n但是为了覆盖ie6等低版本浏览器，我们完整的方案里面还是要包含一下兼容代码，就是最开始介绍的代理页面的方法了，但必须是以postMessage为主，这样即便最后会有某些浏览器因为这种通信产生一些网络请求，比例也是非常低的了。\n","source":"_posts/iframe父子页面间通信总结.md","raw":"---\ntitle: iframe父子页面间通信总结\ndate: 2015-10-09\ntags:\n---\n随着网页结构的复杂化，页面内嵌frame越来越常见，但不管是作为内容页来显示，还是作为组件模块嵌入，都有父子页面间通信的需求可能，因此为了更好的实现需求就必须了解父子页面间的通信。\n\niframe子页面与父页面通信根据iframe中src属性是同域链接还是跨域链接，通信方式也不同。\n\n##同域下父子页面的通信\n\n页面间通信常以页面间调用实现，包括以下几个方面：（调用包含html dom，js全局变量，js方法）\n\n- 父页面调用子iframe页面；\n- 子iframe页面调用父页面；\n- 主页面内兄弟iframe页面之间相互调用；\n\n*下面我们详细分析*\n###父页面调用子iframe\n\n```\n\n<iframe name=\"iframeName\" id=\"iframeId\" src=\"child.html\"></iframe>\n\n/**\n*1、通过iframe的ID获取子页面的dom，然后通过内置属性contentWindow取得子窗口的window对象\n*   此方法兼容各个浏览器\n*/\ndocument.getElementById('iframeId').contentWindow.func(); \ndocument.getElementById('iframeId').contentWindow.document.getElementById('子页面中的元素ID');\n\n/**\n*2、通过iframe的name（名字）直接获取子窗口的window对象\n*/\niframeName.window.func(); \niframeName.window.document.getElementById('子页面中的元素ID'); \n\n/**\n*3、通过window对象的frames[]数组对象直接获取子frame对象\n*/\nwindow.frames[0].func();\nwindow.frames[0].document.getElementById('子页面中的元素ID');\n//或\nwindow.frames[\"iframeName\"].func();\nwindow.frames[\"iframeName\"].document.getElementById('子页面中的元素ID');\n\n```\n\n###子iframe页面调用父页面\n\n```\n/**\n*通过parent或top对象获取父页面的window对象内元素及方法\n*/\nparent.window.func(); \nparent.window.document.getElementById('父页面中的元素ID');\n//同理\ntop.window.func(); \ntop.window.document.getElementById('父页面中的元素ID');\n```\n###页面内兄弟iframe页面相互调用\n其实任意页面间通信是类似的，根据上面两个方法组合就可以实现页面内兄弟iframe页面相互调用\n\n> 原理：在子页面中获取父页面（parent）或顶层页面（top）的window元素，然后再根据兄弟iframe的name或id获取兄弟页面的window对象，得到window对象后就可以随意操作了。\n\n```\n/*以下为在child1.html页面内访问兄弟frame页面*/\n<iframe name=\"iframe1Name\" id=\"iframe1Id\" src=\"child1.html\"></iframe>\n<iframe name=\"iframe2Name\" id=\"iframe2Id\" src=\"child2.html\"></iframe>\n<iframe name=\"iframe3Name\" id=\"iframe3Id\" src=\"child3.html\"></iframe>\n\n/**\n*1、通过兄弟iframe的ID获取其dom，然后通过内置属性contentWindow取得window对象\n*   此方法兼容各个浏览器\n*/\nparent.window.document.getElementById('iframe2Id').contentWindow.func(); \nparent.window.document.getElementById('iframe3Id').contentWindow.document.getElementById('兄弟页面3中的元素ID');\n\n/**\n*2、通过iframe的name（名字）直接获取子窗口的window对象\n*/\nparent.window.iframe2Name.window.func(); \nparent.window.iframe3Name.window.document.getElementById('兄弟页面3中的元素ID'); \n\n/**\n*3、通过window对象的frames[]数组对象直接获取子frame对象\n*/\nparent.window.frames[1].func();\ntop.window.frames[2].document.getElementById('兄弟页面3中的元素ID');\n//或\nparent.window.frames[\"iframe2Name\"].func();\nparent.window.frames[\"iframe3Name\"].document.getElementById('兄弟页面3中的元素ID');\n\n```\n\n##跨域下父子页面的通信\n\n###父页面向子页面传递数据\n如果iframe所链接的是外部页面，因为安全机制就不能使用同域名下的通信方式了。\n\n实现的技巧是利用location对象的hash值，通过它传递通信数据。在父页面设置iframe的src后面多加个data字符串，然后在子页面中通过某种方式能即时的获取到这儿的data就可以了，例如：\n\n1. 在子页面中通过setInterval方法设置定时器，监听location.href的变化即可获得上面的data信息\n\n2. 然后子页面根据这个data信息进行相应的逻辑处理\n\n###子页面向父页面传递数据\n\n实现技巧就是利用一个代理iframe，它嵌入到子页面中，并且和父页面必须保持是同域，然后通过它充分利用上面第一种通信方式的实现原理就把子页面的数据传递给代理iframe，然后由于代理的iframe和主页面是同域的，所以主页面就可以利用同域的方式获取到这些数据。使用 window.top或者window.parent.parent获取浏览器最顶层window对象的引用。\n\n\n\n###详解\n>此段博文转自[http://tid.tenpay.com/?p=4695](http://tid.tenpay.com/?p=4695)感谢作者lyndon\n\n*先来看看哪些情况下才存在跨域的问题*\n\n|编号|URL|说明|是否允许通信|\n|:-:|:--:|:--:|:--------:|\n|1| http://www.a.com/a.js<br/>http://www.a.com/b.js|同一域名下|允许|\n|2| http://www.a.com/a/a.js<br/>http://www.a.com/b/b.js|同一域名下不同文件夹|允许|\n|3| http://www.a.com:8000/a.js<br/>http://www.a.com/b.js|同一域名，不同端口|不允许|\n|4| http://www.a.com/a.js<br/>https://www.a.com/b.js|同一域名，不同协议|不允许|\n|5| http://www.a.com/a.js<br/>http://127.0.0.1/b.js|域名和域名对应ip|不允许|\n|6| http://www.a.com/a.js<br/>http://will.a.com/b.js|主域相同，子域不同|不允许|\n|7| http://www.a.com/a.js<br/>http://a.com/b.js|同一域名，不同二级域名（同上）|不允许（cookie这种情况下也不允许访问）|\n|8| http://www.a.com/a.js<br/>http://www.b.com/b.js|不同域名|不允许|\n\n其中编号6、7两种情况同属于主域名相同的情况，可以设置domain来解决问题，今天就不讨论这种情况了。 对于其他跨域通信的问题，我想又可以分成两类，**其一（第一种情况）**是a.com下面的a.js试图请求b.com下某个接口时产生的跨域问题。**其二（第二种情况）**是当a.com与b.com下面的页面成父子页面关系时试图互相通信时产生的跨域问题，典型的应用场景如a.com/a.html使用iframe内嵌了b.com/b.html，大家都知道a.html内的js脚本试图访问b.html时是会被拒绝的，反之亦然。**第一种情况**，目前主流的方案是JSONP，高版本浏览器支持html5的话，还可以使用XHR2支持跨域通信的新特性。**第二种情况**，目前主要是通过代理页面或者使用postMessageAPI来做，这也是今天要讨论的话题。 第二种情况，有这样一些类似的案例：a.com/a.html使用iframe内嵌了b.com/b.html，现在希望iframe的高度能自动适应b.html的高度，使iframe不要出现滚动条。我们都知道跨域了，a.html是没办法直接读取到b.html的高度的，b.html也没办法把自己的高度告诉a.html。 直接说可以用代理页面的方法搞定这个问题吧，但是怎么代理法，先来看下面这张图：\n![这里写图片描述](http://img.blog.csdn.net/20151009182823247)\nb.html与a.html是不能直接通信的。我们可以在b.html下面再iframe内嵌一个proxy.html页面，因为这个页面是放在a.com下面的，与a.html同域，所以它其实是可以和a.html直接通信的，假如a.html里面有定义一个方法_callback，在proxy.html可以直接top._callback()调用它。但是b.html本身和proxy.html也是不能直接通信的，所谓代理页面的桥梁作用怎么实现呢? b.html内嵌proxy.html是通过一段类似下面这样的代码： \n```\n<iframe id=”proxy” src=”a.com/proxy.html” name=”proxy” frameborder=”0″ width=”0″ height=”0″></iframe>\n``` \n这个iframe的src属性b.html是有权限控制的。如果它把src设置成a.com/proxy.html?args=XXX,也就是给url加一个查询字符串，proxy.html内的js是可以读取到的。对的，这个url的查询字符串就是b.html和proxy.html之间通信的桥梁，美中不足的是每次通信都要重写一次url造成一次网络请求，这有时会对服务器及页面的运行效率产生很大的影响。同时由于参数是通过url来传递的，会有长度和数据类型的限制，搜集的资料显示：\n\n>- IE浏览器对URL的长度现限制为2048字节。 \n>- 360极速浏览器对URL的长度限制为2118字节。 \n>- Firefox(Browser)对URL的长度限制为65536字节。 \n>- Safari(Browser)对URL的长度限制为80000字节。 \n>- Opera(Browser)对URL的长度限制为190000字节。 \n>- Google(chrome)对URL的长度限制为8182字节。\n\n上面的方法，通过迂回战术实现了b.html跟a.html通信，但是倒过来，a.html怎么跟b.html通信呢?嵌入在b.html里面的proxy.html可以用top快速的联系上a.html，但是要想让a.html找到proxy.html就不容易了，夹在中间的 b.html生生把它们分开了，a.html没法让b.html去找到proxy.html然后返回给它。只能采用更迂回的战术了。 顺着前面b.html到a.html的通信过程，逆向的想一下，虽然a.html没有办法主动找到proxy.html，但是proxy.html可以反过来告诉a.html它在哪里： 在proxy.html加这么一段脚本：\n\n```\nvar topWin = top;  \nfunction getMessage(data) {  \n    alert(\"messageFormTopWin:\" + data);  \n}  \nfunction sendMessage(data) {  \n    topWin.proxyWin = window;  \n    topWin.getMessage(data);  \n} \n```\n在a.html加这么一段脚本：\n```\nvar proxyWin = null;  \nfunction getMessage(data) {  \n   alert(\"messageFormProxyWin:\"+data);  \n   sendMessage(\"top has receive data:\"+data);  \n}  \nfunction sendMessage(data) {  \n    if (null != proxyWin) {  \n        proxyWin.getMessage(data);  \n    }  \n} \n```\n也就是必须由proxy.html先主动发送一个消息给a.html，a.html得到proxy.html页面window的引用，就可以反过来向它发送请求了。 现在a.html可以把消息发给proxy.html了，但是proxy.html怎么把消息转送到b.html？似乎这才是难点，因为它们之间才真正有着“跨域”这一道鸿沟。 这回我们不再用前面那个iframe内嵌代理页面的方法再在proxy.html内嵌一个b.com下面的代理页面了，这样实在会给人感觉嵌的太深了，四层。但是为了跨越这道鸿沟，b.com下面也加一个代理页面是免不的。不过现在我们要利用一下window.name。window.name有一个特性，就是页面在同一个浏览器窗口（标签页）中跳转时，它一直存在而且值不会改变。比如我们在a.html中设置了window.name=”a”,然后location.href=”http://b.com/b.html”跳转后，b.html可以读取window.name的值为”a”;而且window.name的值长度一般可以到达2M，ie和firefox甚至可以达到32M，这样的存储容量，足够利用起来做跨域的数据传递了。好吧，我们现在要做的就是当proxy.html拿到a.html发送过来的数据后把这个数据写入window.name中，然后跳转到b.com下面的代理页面，我们这里假设是bproxy.html。bproxy.html读取到window.name值后，通知给它父页面b.html就简单了。我们再来看这个过程可以用图大概示意一下：\n![这里写图片描述](http://img.blog.csdn.net/20151009183805363)\n图例中绿色的双向箭头表示可以通信，橙色的双向箭头表示不能直接通信。 最后我们简单看一下双向通信的实测效果：\n![这里写图片描述](http://img.blog.csdn.net/20151009183823009)\nb.html每次加载的时候都先给a.html发一个”连接请求”，让a.html可以找到proxy.html。所以页面第一次加载的时候会产生三个请求：\n![这里写图片描述](http://img.blog.csdn.net/20151009183840678)\n每次b.html向a.html发送消息的时候会产生一个请求：\n![这里写图片描述](http://img.blog.csdn.net/20151009183858566)\n每次a.html向b.html发送消息的时候会产生两个请求，其中一个是a.com/proxy.html向b.com/bproxy.html跳转产生的，另一个是b.html重新向a.html发起“连接请求”时产生的：\n![这里写图片描述](http://img.blog.csdn.net/20151009183913229)\n\n最后简单看一下实测的几个测试页面代码： \n*代码片段一，a.com/a.html:*\n```\n<html xmlns=\"http://www.w3.org/1999/xhtml\">  \n<head>  \n   <title>a.com</title>  \n</head>  \n<body>  \n    <div id=\"Div1\">  \n        A.com/a.html</div>  \n    <input id=\"txt_msg\" type=\"text\" />  \n    <input id=\"Button1\" type=\"button\" value=\"向b.com/b.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" />  \n    <div id=\"div_msg\">  \n    </div>  \n    <iframe width=\"800\" height=\"400\" id=\"mainFrame\" src=\"<A href=\"http://localhost:8091/b.com/b.htm\">http://localhost:8091/b.com/b.htm</A>\">  \n    </iframe>  \n    <script type=\"text/javascript\"> \n        var proxyWin = null;  \n        function showMsg(msg) {  \n            document.getElementById(\"div_msg\").innerHTML = msg;  \n        }  \n        function getMessage(data) {  \n            showMsg(\"messageForm b.html to ProxyWin:\" + data);  \n        }  \n        function sendMessage(data) {  \n            if (null != proxyWin) {  \n                proxyWin.getMessage(data);  \n            }  \n        }  \n    </script> \n</body>  \n</html> \n```\n*代码片段二，a.com/proxy.html:*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>a.com</title>\n</head>\n<body>\n<div id=\"Div1\">A.com/proxy.html</div>\n<div id=\"div_msg\"></div>\n<script type=\"text/javascript\">\n    var topWin = top;\n    function showMsg(msg) {\n        document.getElementById(\"div_msg\").innerHTML = msg;\n    }\n\n    function getMessage(data) {\n        showMsg(\"messageForm A.com/a.html:\" + data + \"<br/>两秒后将跳转到B.com/bproxy.html\");\n        window.name = data;\n        setTimeout(function () { location.href = \"<a href=\"http://localhost:8091/b.com/bproxy.htm\">http://localhost:8091/b.com/bproxy.htm</a>\" }, 2000);// 为了能让大家看到跳转的过程，所以加了个延时\n    }\n\n    function sendMessage(data) {\n        topWin.proxyWin = window;\n        topWin.getMessage(data);\n    }\n\n    var search = location.search.substring(1);\n    showMsg(\"messageForm B.com/b.html:\" + search);\n    sendMessage(search);\n    </script>\n</body>\n</html>\n```\n*代码片段三，b.com/b.html*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>b.com</title>\n</head>\n<body>\n    <div id=\"Div1\">\n        B.com/b.html</div>\n    <input id=\"txt_msg\" type=\"text\" />\n    <input id=\"Button1\" type=\"button\" value=\"向A.com/a.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" />\n    <div id=\"div_msg\">\n    </div>\n    <iframe id=\"proxy\" name=\"proxy\" style=\"width: 600px; height: 300px\"></iframe>\n    <script type=\"text/javascript\">\n        function showMsg(msg) {\n            document.getElementById(\"div_msg\").innerHTML = msg;\n        }\n        function sendMessage(data) {\n            var proxy = document.getElementById(\"proxy\");\n            proxy.src=\"<A href=\"http://localhost:8090/a.com/proxy.htm?data\">http://localhost:8090/a.com/proxy.htm?data</A>=\" + data;\n        }\n        function connect() {\n            sendMessage(\"connect\");\n        }\n        function getMessage(data) {\n            showMsg(\"messageForm a.html to ProxyWin:\" + data);\n            connect();\n        }\n\n        connect(); // 页面一加载，就执行一次连接\n    </script>\n</body>\n</html>\n```\n*代码片段四，b.com/bproxy.html*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head>\n    <title>b.com</title>\n</head>\n<body>\n    <div id=\"Div1\">\n        B.com/bproxy.html</div>\n    <div id=\"div_msg\">\n    </div>\n    <script type=\"text/javascript\">\n        var parentWin = parent;\n        var data = null;\n\n        function getMessage() {\n            if (window.name) {\n                data = window.name;\n                parentWin.getMessage(data);\n            }\n            document.getElementById(\"div_msg\").innerHTML = \"messageForm a.com/proxy.html:\" + data;\n\n        }\n        getMessage();         \n    </script>\n</body>\n</html>\n```\n好吧，现在我必须把话锋调转一下了。前面讲的这么多，也只是抛出来一些之前我们可能会采用的跨域通信方法，事实上代理页面、url传参数和window.name、甚至还有一些利用url的hash值的跨域传值方法，都能百度到不少相关资料。但它们都逃不开代理页面，也就不可避免的要产生网络请求，而事实上这并不是我们的本意，我们原本希望它们能够直接在客户端通信，避免不必要的网络请求开销——这些开销，在访问量超大的站点可能会对服务器产生相当大的压力。那么，有没有更完美一点的替代方案呢？ 必须给大家推荐postMessage。postMessage 正是为了满足一些合理的、不同站点之间的内容能在浏览器端进行交互的需求而设计的。利用postMessage API实现跨域通信非常简单，我们直接看一下实例的代码： \n*代码片段五，A.com/a.html：*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head runat=\"server\">\n    <title>A.com/a.html</title>\n    <script type=\"text/javascript\">\n        var trustedOrigin = \"<A href=\"http://localhost:8091/\">http://localhost:8091</A>\";\n\n        function messageHandler(e) {\n            if (e.origin == trustedOrigin) {//接收消息的时候，判断消息是否来自可信的源，这个源是否可信则完全看自己的定义了。\n                showMsg(e.data);//e.data才是真实要传递的数据\n            } else {\n                // ignore messages from other origins\n            }\n        }\n\n        function sendString(s) {//发送消息\n            document.getElementById(\"widget\").contentWindow.postMessage(s, trustedOrigin);\n        }\n\n        function showMsg(message) {\n            document.getElementById(\"status\").innerHTML = message;\n        }\n\n        function sendStatus() {\n            var statusText = document.getElementById(\"statusText\").value;\n            sendString(statusText);\n        }\n\n        function loadDemo() {\n            addEvent(document.getElementById(\"sendButton\"), \"click\", sendStatus);\n            sendStatus();\n        }\n\n        function addEvent(obj, trigger, fun) {\n            if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n            else if (obj.attachEvent) obj.attachEvent('on' + trigger, fun);\n            else obj['on' + trigger] = fun;\n        }\n        addEvent(window, \"load\", loadDemo);\n        addEvent(window, \"message\", messageHandler);\n\n    </script>\n</head>\n<body>\n    <h1>A.com/a.html</h1>\n    <p><b>源</b>: <A href=\"http://localhost:8090</p\">http://localhost:8090</p</A>>\n    <input type=\"text\" id=\"statusText\" value=\"msg from a.com/a.html\">\n    <button id=\"sendButton\">向b.com/b.html发送消息</button>\n    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p>\n    <iframe id=\"widget\" width=\"800\" height=\"400\" src=\"<A href=\"http://localhost:8091/PostMessage/Default.aspx%22%3E%3C/iframe\">http://localhost:8091/PostMessage/Default.aspx\"></iframe</A>>\n</body>\n</html>\n```\n*代码片段六，B.com/b.html：*\n```\n<html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\">\n<head runat=\"server\">\n    <title>B.com/b.html</title>\n    <script type=\"text/javascript\">\n        //检查postMessage 是否可以用：window.postMessage===undefined\n        //定义信任的消息源\n        var trustedOrigin = \"<A href=\"http://localhost:8090/\">http://localhost:8090</A>\";\n        function messageHandler(e) {\n            if (e.origin === \"<A href=\"http://localhost:8090/\">http://localhost:8090</A>\") {\n                showMsg(e.data);\n            } else {\n                // ignore messages from other origins\n            }\n        }\n\n        function sendString(s) {\n            window.top.postMessage(s, trustedOrigin); //第二个参数是消息传送的目的地\n        }\n\n        function loadDemo() {\n            addEvent(document.getElementById(\"actionButton\"), \"click\", function () {\n                var messageText = document.getElementById(\"messageText\").value;\n                sendString(messageText);\n            });\n        }\n\n        function showMsg(message) {\n            document.getElementById(\"status\").innerHTML = message;\n        }\n\n        function addEvent(obj, trigger, fun) {\n            if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n            else if (obj.attachEvent) obj.attachEvent('on' + trigger, fun);\n            else obj['on' + trigger] = fun;\n        }\n        addEvent(window, \"load\", loadDemo);\n        addEvent(window, \"message\", messageHandler);\n    </script>\n</head>\n<body>\n    <h1>B.com/b.html</h1>\n    <p><b>源</b>: <A href=\"http://localhost:8091</p\">http://localhost:8091</p</A>>\n    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p>\n            <div>\n                <input type=\"text\" id=\"messageText\" value=\"msg from b.com/b.html\">\n                <button id=\"actionButton\"> 向a.com/a.html发送一个消息</button>\n            </div>\n</body>\n</html>\n```\n代码的关键是message事件是一个拥有data（数据）和origin(来源)属性的DOM事件。data属性是发送的实际数据，origin属性是发送来源。Origin属性很关键，有了这个属性，接收方可以轻易的忽略掉来自不可信源的消息，也就能有效避免跨域通信这个开口给我们的源安全带来的隐患。接口很强大，所以代码很简单。我们可以抓包看一下，这个通信过程完全是在浏览器端的，没有产生任何的网络请求。同时这个接口目前已经得到了绝大多数浏览器的支持，包括IE8及以上版本，参见下面的图表：\n![这里写图片描述](http://img.blog.csdn.net/20151009184516692)\n但是为了覆盖ie6等低版本浏览器，我们完整的方案里面还是要包含一下兼容代码，就是最开始介绍的代理页面的方法了，但必须是以postMessage为主，这样即便最后会有某些浏览器因为这种通信产生一些网络请求，比例也是非常低的了。\n","slug":"iframe父子页面间通信总结","published":1,"updated":"2017-05-16T13:28:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610rb0004xwxsfacz214k","content":"<p>随着网页结构的复杂化，页面内嵌frame越来越常见，但不管是作为内容页来显示，还是作为组件模块嵌入，都有父子页面间通信的需求可能，因此为了更好的实现需求就必须了解父子页面间的通信。</p>\n<p>iframe子页面与父页面通信根据iframe中src属性是同域链接还是跨域链接，通信方式也不同。</p>\n<p>##同域下父子页面的通信</p>\n<p>页面间通信常以页面间调用实现，包括以下几个方面：（调用包含html dom，js全局变量，js方法）</p>\n<ul>\n<li>父页面调用子iframe页面；</li>\n<li>子iframe页面调用父页面；</li>\n<li>主页面内兄弟iframe页面之间相互调用；</li>\n</ul>\n<p><em>下面我们详细分析</em></p>\n<p>###父页面调用子iframe</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&lt;iframe name=&quot;iframeName&quot; id=&quot;iframeId&quot; src=&quot;child.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*1、通过iframe的ID获取子页面的dom，然后通过内置属性contentWindow取得子窗口的window对象</div><div class=\"line\">*   此方法兼容各个浏览器</div><div class=\"line\">*/</div><div class=\"line\">document.getElementById(&apos;iframeId&apos;).contentWindow.func(); </div><div class=\"line\">document.getElementById(&apos;iframeId&apos;).contentWindow.document.getElementById(&apos;子页面中的元素ID&apos;);</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*2、通过iframe的name（名字）直接获取子窗口的window对象</div><div class=\"line\">*/</div><div class=\"line\">iframeName.window.func(); </div><div class=\"line\">iframeName.window.document.getElementById(&apos;子页面中的元素ID&apos;); </div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*3、通过window对象的frames[]数组对象直接获取子frame对象</div><div class=\"line\">*/</div><div class=\"line\">window.frames[0].func();</div><div class=\"line\">window.frames[0].document.getElementById(&apos;子页面中的元素ID&apos;);</div><div class=\"line\">//或</div><div class=\"line\">window.frames[&quot;iframeName&quot;].func();</div><div class=\"line\">window.frames[&quot;iframeName&quot;].document.getElementById(&apos;子页面中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>###子iframe页面调用父页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\">*通过parent或top对象获取父页面的window对象内元素及方法</div><div class=\"line\">*/</div><div class=\"line\">parent.window.func(); </div><div class=\"line\">parent.window.document.getElementById(&apos;父页面中的元素ID&apos;);</div><div class=\"line\">//同理</div><div class=\"line\">top.window.func(); </div><div class=\"line\">top.window.document.getElementById(&apos;父页面中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>###页面内兄弟iframe页面相互调用<br>其实任意页面间通信是类似的，根据上面两个方法组合就可以实现页面内兄弟iframe页面相互调用</p>\n<blockquote>\n<p>原理：在子页面中获取父页面（parent）或顶层页面（top）的window元素，然后再根据兄弟iframe的name或id获取兄弟页面的window对象，得到window对象后就可以随意操作了。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*以下为在child1.html页面内访问兄弟frame页面*/</div><div class=\"line\">&lt;iframe name=&quot;iframe1Name&quot; id=&quot;iframe1Id&quot; src=&quot;child1.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;iframe name=&quot;iframe2Name&quot; id=&quot;iframe2Id&quot; src=&quot;child2.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;iframe name=&quot;iframe3Name&quot; id=&quot;iframe3Id&quot; src=&quot;child3.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*1、通过兄弟iframe的ID获取其dom，然后通过内置属性contentWindow取得window对象</div><div class=\"line\">*   此方法兼容各个浏览器</div><div class=\"line\">*/</div><div class=\"line\">parent.window.document.getElementById(&apos;iframe2Id&apos;).contentWindow.func(); </div><div class=\"line\">parent.window.document.getElementById(&apos;iframe3Id&apos;).contentWindow.document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*2、通过iframe的name（名字）直接获取子窗口的window对象</div><div class=\"line\">*/</div><div class=\"line\">parent.window.iframe2Name.window.func(); </div><div class=\"line\">parent.window.iframe3Name.window.document.getElementById(&apos;兄弟页面3中的元素ID&apos;); </div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*3、通过window对象的frames[]数组对象直接获取子frame对象</div><div class=\"line\">*/</div><div class=\"line\">parent.window.frames[1].func();</div><div class=\"line\">top.window.frames[2].document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div><div class=\"line\">//或</div><div class=\"line\">parent.window.frames[&quot;iframe2Name&quot;].func();</div><div class=\"line\">parent.window.frames[&quot;iframe3Name&quot;].document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>##跨域下父子页面的通信</p>\n<p>###父页面向子页面传递数据<br>如果iframe所链接的是外部页面，因为安全机制就不能使用同域名下的通信方式了。</p>\n<p>实现的技巧是利用location对象的hash值，通过它传递通信数据。在父页面设置iframe的src后面多加个data字符串，然后在子页面中通过某种方式能即时的获取到这儿的data就可以了，例如：</p>\n<ol>\n<li><p>在子页面中通过setInterval方法设置定时器，监听location.href的变化即可获得上面的data信息</p>\n</li>\n<li><p>然后子页面根据这个data信息进行相应的逻辑处理</p>\n</li>\n</ol>\n<p>###子页面向父页面传递数据</p>\n<p>实现技巧就是利用一个代理iframe，它嵌入到子页面中，并且和父页面必须保持是同域，然后通过它充分利用上面第一种通信方式的实现原理就把子页面的数据传递给代理iframe，然后由于代理的iframe和主页面是同域的，所以主页面就可以利用同域的方式获取到这些数据。使用 window.top或者window.parent.parent获取浏览器最顶层window对象的引用。</p>\n<p>###详解</p>\n<blockquote>\n<p>此段博文转自<a href=\"http://tid.tenpay.com/?p=4695\" target=\"_blank\" rel=\"external\">http://tid.tenpay.com/?p=4695</a>感谢作者lyndon</p>\n</blockquote>\n<p><em>先来看看哪些情况下才存在跨域的问题</em></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">编号</th>\n<th style=\"text-align:center\">URL</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">是否允许通信</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"http://www.a.com/b.js\" target=\"_blank\" rel=\"external\">http://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名下</td>\n<td style=\"text-align:center\">允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a/a.js</a><br><a href=\"http://www.a.com/b/b.js\" target=\"_blank\" rel=\"external\">http://www.a.com/b/b.js</a></td>\n<td style=\"text-align:center\">同一域名下不同文件夹</td>\n<td style=\"text-align:center\">允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com:8000/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com:8000/a.js</a><br><a href=\"http://www.a.com/b.js\" target=\"_blank\" rel=\"external\">http://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同端口</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"https://www.a.com/b.js\" target=\"_blank\" rel=\"external\">https://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同协议</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"http://127.0.0.1/b.js\" target=\"_blank\" rel=\"external\">http://127.0.0.1/b.js</a></td>\n<td style=\"text-align:center\">域名和域名对应ip</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"http://will.a.com/b.js\" target=\"_blank\" rel=\"external\">http://will.a.com/b.js</a></td>\n<td style=\"text-align:center\">主域相同，子域不同</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"http://a.com/b.js\" target=\"_blank\" rel=\"external\">http://a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同二级域名（同上）</td>\n<td style=\"text-align:center\">不允许（cookie这种情况下也不允许访问）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\" target=\"_blank\" rel=\"external\">http://www.a.com/a.js</a><br><a href=\"http://www.b.com/b.js\" target=\"_blank\" rel=\"external\">http://www.b.com/b.js</a></td>\n<td style=\"text-align:center\">不同域名</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n</tbody>\n</table>\n<p>其中编号6、7两种情况同属于主域名相同的情况，可以设置domain来解决问题，今天就不讨论这种情况了。 对于其他跨域通信的问题，我想又可以分成两类，<strong>其一（第一种情况）</strong>是a.com下面的a.js试图请求b.com下某个接口时产生的跨域问题。<strong>其二（第二种情况）</strong>是当a.com与b.com下面的页面成父子页面关系时试图互相通信时产生的跨域问题，典型的应用场景如a.com/a.html使用iframe内嵌了b.com/b.html，大家都知道a.html内的js脚本试图访问b.html时是会被拒绝的，反之亦然。<strong>第一种情况</strong>，目前主流的方案是JSONP，高版本浏览器支持html5的话，还可以使用XHR2支持跨域通信的新特性。<strong>第二种情况</strong>，目前主要是通过代理页面或者使用postMessageAPI来做，这也是今天要讨论的话题。 第二种情况，有这样一些类似的案例：a.com/a.html使用iframe内嵌了b.com/b.html，现在希望iframe的高度能自动适应b.html的高度，使iframe不要出现滚动条。我们都知道跨域了，a.html是没办法直接读取到b.html的高度的，b.html也没办法把自己的高度告诉a.html。 直接说可以用代理页面的方法搞定这个问题吧，但是怎么代理法，先来看下面这张图：<br><img src=\"http://img.blog.csdn.net/20151009182823247\" alt=\"这里写图片描述\"><br>b.html与a.html是不能直接通信的。我们可以在b.html下面再iframe内嵌一个proxy.html页面，因为这个页面是放在a.com下面的，与a.html同域，所以它其实是可以和a.html直接通信的，假如a.html里面有定义一个方法_callback，在proxy.html可以直接top._callback()调用它。但是b.html本身和proxy.html也是不能直接通信的，所谓代理页面的桥梁作用怎么实现呢? b.html内嵌proxy.html是通过一段类似下面这样的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;iframe id=”proxy” src=”a.com/proxy.html” name=”proxy” frameborder=”0″ width=”0″ height=”0″&gt;&lt;/iframe&gt;</div><div class=\"line\">``` </div><div class=\"line\">这个iframe的src属性b.html是有权限控制的。如果它把src设置成a.com/proxy.html?args=XXX,也就是给url加一个查询字符串，proxy.html内的js是可以读取到的。对的，这个url的查询字符串就是b.html和proxy.html之间通信的桥梁，美中不足的是每次通信都要重写一次url造成一次网络请求，这有时会对服务器及页面的运行效率产生很大的影响。同时由于参数是通过url来传递的，会有长度和数据类型的限制，搜集的资料显示：</div><div class=\"line\"></div><div class=\"line\">&gt;- IE浏览器对URL的长度现限制为2048字节。 </div><div class=\"line\">&gt;- 360极速浏览器对URL的长度限制为2118字节。 </div><div class=\"line\">&gt;- Firefox(Browser)对URL的长度限制为65536字节。 </div><div class=\"line\">&gt;- Safari(Browser)对URL的长度限制为80000字节。 </div><div class=\"line\">&gt;- Opera(Browser)对URL的长度限制为190000字节。 </div><div class=\"line\">&gt;- Google(chrome)对URL的长度限制为8182字节。</div><div class=\"line\"></div><div class=\"line\">上面的方法，通过迂回战术实现了b.html跟a.html通信，但是倒过来，a.html怎么跟b.html通信呢?嵌入在b.html里面的proxy.html可以用top快速的联系上a.html，但是要想让a.html找到proxy.html就不容易了，夹在中间的 b.html生生把它们分开了，a.html没法让b.html去找到proxy.html然后返回给它。只能采用更迂回的战术了。 顺着前面b.html到a.html的通信过程，逆向的想一下，虽然a.html没有办法主动找到proxy.html，但是proxy.html可以反过来告诉a.html它在哪里： 在proxy.html加这么一段脚本：</div></pre></td></tr></table></figure></p>\n<p>var topWin = top;<br>function getMessage(data) {<br>    alert(“messageFormTopWin:” + data);<br>}<br>function sendMessage(data) {<br>    topWin.proxyWin = window;<br>    topWin.getMessage(data);<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">在a.html加这么一段脚本：</div></pre></td></tr></table></figure></p>\n<p>var proxyWin = null;<br>function getMessage(data) {<br>   alert(“messageFormProxyWin:”+data);<br>   sendMessage(“top has receive data:”+data);<br>}<br>function sendMessage(data) {<br>    if (null != proxyWin) {<br>        proxyWin.getMessage(data);<br>    }<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">也就是必须由proxy.html先主动发送一个消息给a.html，a.html得到proxy.html页面window的引用，就可以反过来向它发送请求了。 现在a.html可以把消息发给proxy.html了，但是proxy.html怎么把消息转送到b.html？似乎这才是难点，因为它们之间才真正有着“跨域”这一道鸿沟。 这回我们不再用前面那个iframe内嵌代理页面的方法再在proxy.html内嵌一个b.com下面的代理页面了，这样实在会给人感觉嵌的太深了，四层。但是为了跨越这道鸿沟，b.com下面也加一个代理页面是免不的。不过现在我们要利用一下window.name。window.name有一个特性，就是页面在同一个浏览器窗口（标签页）中跳转时，它一直存在而且值不会改变。比如我们在a.html中设置了window.name=”a”,然后location.href=”http://b.com/b.html”跳转后，b.html可以读取window.name的值为”a”;而且window.name的值长度一般可以到达2M，ie和firefox甚至可以达到32M，这样的存储容量，足够利用起来做跨域的数据传递了。好吧，我们现在要做的就是当proxy.html拿到a.html发送过来的数据后把这个数据写入window.name中，然后跳转到b.com下面的代理页面，我们这里假设是bproxy.html。bproxy.html读取到window.name值后，通知给它父页面b.html就简单了。我们再来看这个过程可以用图大概示意一下：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183805363)</div><div class=\"line\">图例中绿色的双向箭头表示可以通信，橙色的双向箭头表示不能直接通信。 最后我们简单看一下双向通信的实测效果：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183823009)</div><div class=\"line\">b.html每次加载的时候都先给a.html发一个”连接请求”，让a.html可以找到proxy.html。所以页面第一次加载的时候会产生三个请求：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183840678)</div><div class=\"line\">每次b.html向a.html发送消息的时候会产生一个请求：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183858566)</div><div class=\"line\">每次a.html向b.html发送消息的时候会产生两个请求，其中一个是a.com/proxy.html向b.com/bproxy.html跳转产生的，另一个是b.html重新向a.html发起“连接请求”时产生的：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183913229)</div><div class=\"line\"></div><div class=\"line\">最后简单看一下实测的几个测试页面代码： </div><div class=\"line\">*代码片段一，a.com/a.html:*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"http://www.w3.org/1999/xhtml\">  </html></p>\n<p><head><br>   <title>a.com</title><br></head>  </p>\n<p><body><br>    <div id=\"Div1\"><br>        A.com/a.html</div><br>    <input id=\"txt_msg\" type=\"text\"><br>    <input id=\"Button1\" type=\"button\" value=\"向b.com/b.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\"><br>    <div id=\"div_msg\"><br>    </div><br>    <iframe width=\"800\" height=\"400\" id=\"mainFrame\" src=\"<A href=\" http:=\"\" localhost:8091=\"\" b.com=\"\" b.htm\"=\"\">http://localhost:8091/b.com/b.htm\"><br>    </iframe><br>    <script type=\"text/javascript\"><br>        var proxyWin = null;<br>        function showMsg(msg) {<br>            document.getElementById(“div_msg”).innerHTML = msg;<br>        }<br>        function getMessage(data) {<br>            showMsg(“messageForm b.html to ProxyWin:” + data);<br>        }<br>        function sendMessage(data) {<br>            if (null != proxyWin) {<br>                proxyWin.getMessage(data);<br>            }<br>        }<br>    </script><br></body><br><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段二，a.com/proxy.html:*</div></pre></td></tr></table></figure></p>\n<p><html 1999=\"\" xmlns=\"<A href=\" http:=\"\" www.w3.org=\"\" xhtml\"=\"\">http://www.w3.org/1999/xhtml\"></html></p>\n<p><head><br>    <title>a.com</title><br></head></p>\n<p><body></body></p>\n<p><div id=\"Div1\">A.com/proxy.html</div></p>\n<p><div id=\"div_msg\"></div></p>\n<p><script type=\"text/javascript\"><br>    var topWin = top;<br>    function showMsg(msg) {<br>        document.getElementById(“div_msg”).innerHTML = msg;<br>    }</p>\n<pre><code>function getMessage(data) {\n    showMsg(&quot;messageForm A.com/a.html:&quot; + data + &quot;&lt;br/&gt;两秒后将跳转到B.com/bproxy.html&quot;);\n    window.name = data;\n    setTimeout(function () { location.href = &quot;&lt;a href=&quot;http://localhost:8091/b.com/bproxy.htm&quot;&gt;http://localhost:8091/b.com/bproxy.htm&lt;/a&gt;&quot; }, 2000);// 为了能让大家看到跳转的过程，所以加了个延时\n}\n\nfunction sendMessage(data) {\n    topWin.proxyWin = window;\n    topWin.getMessage(data);\n}\n\nvar search = location.search.substring(1);\nshowMsg(&quot;messageForm B.com/b.html:&quot; + search);\nsendMessage(search);\n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段三，b.com/b.html*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head><br>    <title>b.com</title><br></head></p>\n<p><body><br>    <div id=\"Div1\"><br>        B.com/b.html</div><br>    <input id=\"txt_msg\" type=\"text\" /><br>    <input id=\"Button1\" type=\"button\" value=\"向A.com/a.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" /><br>    <div id=\"div_msg\"><br>    </div><br>    <iframe id=\"proxy\" name=\"proxy\" style=\"width: 600px; height: 300px\"></iframe><br>    <script type=\"text/javascript\"><br>        function showMsg(msg) {<br>            document.getElementById(“div_msg”).innerHTML = msg;<br>        }<br>        function sendMessage(data) {<br>            var proxy = document.getElementById(“proxy”);<br>            proxy.src=”<A href=\"http://localhost:8090/a.com/proxy.htm?data\">http://localhost:8090/a.com/proxy.htm?data</A>=” + data;<br>        }<br>        function connect() {<br>            sendMessage(“connect”);<br>        }<br>        function getMessage(data) {<br>            showMsg(“messageForm a.html to ProxyWin:” + data);<br>            connect();<br>        }</p>\n<pre><code>    connect(); // 页面一加载，就执行一次连接\n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段四，b.com/bproxy.html*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head><br>    <title>b.com</title><br></head></p>\n<p><body><br>    <div id=\"Div1\"><br>        B.com/bproxy.html</div><br>    <div id=\"div_msg\"><br>    </div><br>    <script type=\"text/javascript\"><br>        var parentWin = parent;<br>        var data = null;</p>\n<pre><code>    function getMessage() {\n        if (window.name) {\n            data = window.name;\n            parentWin.getMessage(data);\n        }\n        document.getElementById(&quot;div_msg&quot;).innerHTML = &quot;messageForm a.com/proxy.html:&quot; + data;\n\n    }\n    getMessage();         \n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">好吧，现在我必须把话锋调转一下了。前面讲的这么多，也只是抛出来一些之前我们可能会采用的跨域通信方法，事实上代理页面、url传参数和window.name、甚至还有一些利用url的hash值的跨域传值方法，都能百度到不少相关资料。但它们都逃不开代理页面，也就不可避免的要产生网络请求，而事实上这并不是我们的本意，我们原本希望它们能够直接在客户端通信，避免不必要的网络请求开销——这些开销，在访问量超大的站点可能会对服务器产生相当大的压力。那么，有没有更完美一点的替代方案呢？ 必须给大家推荐postMessage。postMessage 正是为了满足一些合理的、不同站点之间的内容能在浏览器端进行交互的需求而设计的。利用postMessage API实现跨域通信非常简单，我们直接看一下实例的代码： </div><div class=\"line\">*代码片段五，A.com/a.html：*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head runat=\"server\"><br>    <title>A.com/a.html</title><br>    <script type=\"text/javascript\"><br>        var trustedOrigin = “<A href=\"http://localhost:8091/\">http://localhost:8091</A>“;</p>\n<pre><code>    function messageHandler(e) {\n        if (e.origin == trustedOrigin) {//接收消息的时候，判断消息是否来自可信的源，这个源是否可信则完全看自己的定义了。\n            showMsg(e.data);//e.data才是真实要传递的数据\n        } else {\n            // ignore messages from other origins\n        }\n    }\n\n    function sendString(s) {//发送消息\n        document.getElementById(&quot;widget&quot;).contentWindow.postMessage(s, trustedOrigin);\n    }\n\n    function showMsg(message) {\n        document.getElementById(&quot;status&quot;).innerHTML = message;\n    }\n\n    function sendStatus() {\n        var statusText = document.getElementById(&quot;statusText&quot;).value;\n        sendString(statusText);\n    }\n\n    function loadDemo() {\n        addEvent(document.getElementById(&quot;sendButton&quot;), &quot;click&quot;, sendStatus);\n        sendStatus();\n    }\n\n    function addEvent(obj, trigger, fun) {\n        if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n        else if (obj.attachEvent) obj.attachEvent(&apos;on&apos; + trigger, fun);\n        else obj[&apos;on&apos; + trigger] = fun;\n    }\n    addEvent(window, &quot;load&quot;, loadDemo);\n    addEvent(window, &quot;message&quot;, messageHandler);\n\n&lt;/script&gt;\n</code></pre><p></head></p>\n<p><body><br>    <h1>A.com/a.html</h1><br>    <p><b>源</b>: <A href=\"http://localhost:8090</p\">http://localhost:8090</p</A>&gt;<br>    <input type=\"text\" id=\"statusText\" value=\"msg from a.com/a.html\"><br>    <button id=\"sendButton\">向b.com/b.html发送消息</button><br>    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p><br>    <iframe id=\"widget\" width=\"800\" height=\"400\" src=\"<A href=\"http://localhost:8091/PostMessage/Default.aspx%22%3E%3C/iframe\">http://localhost:8091/PostMessage/Default.aspx\"></iframe</A>&gt;<br></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段六，B.com/b.html：*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head runat=\"server\"><br>    <title>B.com/b.html</title><br>    <script type=\"text/javascript\"><br>        //检查postMessage 是否可以用：window.postMessage===undefined<br>        //定义信任的消息源<br>        var trustedOrigin = “<A href=\"http://localhost:8090/\">http://localhost:8090</A>“;<br>        function messageHandler(e) {<br>            if (e.origin === “<A href=\"http://localhost:8090/\">http://localhost:8090</A>“) {<br>                showMsg(e.data);<br>            } else {<br>                // ignore messages from other origins<br>            }<br>        }</p>\n<pre><code>    function sendString(s) {\n        window.top.postMessage(s, trustedOrigin); //第二个参数是消息传送的目的地\n    }\n\n    function loadDemo() {\n        addEvent(document.getElementById(&quot;actionButton&quot;), &quot;click&quot;, function () {\n            var messageText = document.getElementById(&quot;messageText&quot;).value;\n            sendString(messageText);\n        });\n    }\n\n    function showMsg(message) {\n        document.getElementById(&quot;status&quot;).innerHTML = message;\n    }\n\n    function addEvent(obj, trigger, fun) {\n        if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n        else if (obj.attachEvent) obj.attachEvent(&apos;on&apos; + trigger, fun);\n        else obj[&apos;on&apos; + trigger] = fun;\n    }\n    addEvent(window, &quot;load&quot;, loadDemo);\n    addEvent(window, &quot;message&quot;, messageHandler);\n&lt;/script&gt;\n</code></pre><p></head></p>\n<p><body><br>    <h1>B.com/b.html</h1><br>    <p><b>源</b>: <A href=\"http://localhost:8091</p\">http://localhost:8091</p</A>&gt;<br>    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p><br>            <div><br>                <input type=\"text\" id=\"messageText\" value=\"msg from b.com/b.html\"><br>                <button id=\"actionButton\"> 向a.com/a.html发送一个消息</button><br>            </div><br></body><br></html><br>```<br>代码的关键是message事件是一个拥有data（数据）和origin(来源)属性的DOM事件。data属性是发送的实际数据，origin属性是发送来源。Origin属性很关键，有了这个属性，接收方可以轻易的忽略掉来自不可信源的消息，也就能有效避免跨域通信这个开口给我们的源安全带来的隐患。接口很强大，所以代码很简单。我们可以抓包看一下，这个通信过程完全是在浏览器端的，没有产生任何的网络请求。同时这个接口目前已经得到了绝大多数浏览器的支持，包括IE8及以上版本，参见下面的图表：<br><img src=\"http://img.blog.csdn.net/20151009184516692\" alt=\"这里写图片描述\"><br>但是为了覆盖ie6等低版本浏览器，我们完整的方案里面还是要包含一下兼容代码，就是最开始介绍的代理页面的方法了，但必须是以postMessage为主，这样即便最后会有某些浏览器因为这种通信产生一些网络请求，比例也是非常低的了。</p>\n</script></p>","excerpt":"","more":"<p>随着网页结构的复杂化，页面内嵌frame越来越常见，但不管是作为内容页来显示，还是作为组件模块嵌入，都有父子页面间通信的需求可能，因此为了更好的实现需求就必须了解父子页面间的通信。</p>\n<p>iframe子页面与父页面通信根据iframe中src属性是同域链接还是跨域链接，通信方式也不同。</p>\n<p>##同域下父子页面的通信</p>\n<p>页面间通信常以页面间调用实现，包括以下几个方面：（调用包含html dom，js全局变量，js方法）</p>\n<ul>\n<li>父页面调用子iframe页面；</li>\n<li>子iframe页面调用父页面；</li>\n<li>主页面内兄弟iframe页面之间相互调用；</li>\n</ul>\n<p><em>下面我们详细分析</em></p>\n<p>###父页面调用子iframe</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&lt;iframe name=&quot;iframeName&quot; id=&quot;iframeId&quot; src=&quot;child.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*1、通过iframe的ID获取子页面的dom，然后通过内置属性contentWindow取得子窗口的window对象</div><div class=\"line\">*   此方法兼容各个浏览器</div><div class=\"line\">*/</div><div class=\"line\">document.getElementById(&apos;iframeId&apos;).contentWindow.func(); </div><div class=\"line\">document.getElementById(&apos;iframeId&apos;).contentWindow.document.getElementById(&apos;子页面中的元素ID&apos;);</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*2、通过iframe的name（名字）直接获取子窗口的window对象</div><div class=\"line\">*/</div><div class=\"line\">iframeName.window.func(); </div><div class=\"line\">iframeName.window.document.getElementById(&apos;子页面中的元素ID&apos;); </div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*3、通过window对象的frames[]数组对象直接获取子frame对象</div><div class=\"line\">*/</div><div class=\"line\">window.frames[0].func();</div><div class=\"line\">window.frames[0].document.getElementById(&apos;子页面中的元素ID&apos;);</div><div class=\"line\">//或</div><div class=\"line\">window.frames[&quot;iframeName&quot;].func();</div><div class=\"line\">window.frames[&quot;iframeName&quot;].document.getElementById(&apos;子页面中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>###子iframe页面调用父页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\">*通过parent或top对象获取父页面的window对象内元素及方法</div><div class=\"line\">*/</div><div class=\"line\">parent.window.func(); </div><div class=\"line\">parent.window.document.getElementById(&apos;父页面中的元素ID&apos;);</div><div class=\"line\">//同理</div><div class=\"line\">top.window.func(); </div><div class=\"line\">top.window.document.getElementById(&apos;父页面中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>###页面内兄弟iframe页面相互调用<br>其实任意页面间通信是类似的，根据上面两个方法组合就可以实现页面内兄弟iframe页面相互调用</p>\n<blockquote>\n<p>原理：在子页面中获取父页面（parent）或顶层页面（top）的window元素，然后再根据兄弟iframe的name或id获取兄弟页面的window对象，得到window对象后就可以随意操作了。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*以下为在child1.html页面内访问兄弟frame页面*/</div><div class=\"line\">&lt;iframe name=&quot;iframe1Name&quot; id=&quot;iframe1Id&quot; src=&quot;child1.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;iframe name=&quot;iframe2Name&quot; id=&quot;iframe2Id&quot; src=&quot;child2.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;iframe name=&quot;iframe3Name&quot; id=&quot;iframe3Id&quot; src=&quot;child3.html&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*1、通过兄弟iframe的ID获取其dom，然后通过内置属性contentWindow取得window对象</div><div class=\"line\">*   此方法兼容各个浏览器</div><div class=\"line\">*/</div><div class=\"line\">parent.window.document.getElementById(&apos;iframe2Id&apos;).contentWindow.func(); </div><div class=\"line\">parent.window.document.getElementById(&apos;iframe3Id&apos;).contentWindow.document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*2、通过iframe的name（名字）直接获取子窗口的window对象</div><div class=\"line\">*/</div><div class=\"line\">parent.window.iframe2Name.window.func(); </div><div class=\"line\">parent.window.iframe3Name.window.document.getElementById(&apos;兄弟页面3中的元素ID&apos;); </div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\">*3、通过window对象的frames[]数组对象直接获取子frame对象</div><div class=\"line\">*/</div><div class=\"line\">parent.window.frames[1].func();</div><div class=\"line\">top.window.frames[2].document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div><div class=\"line\">//或</div><div class=\"line\">parent.window.frames[&quot;iframe2Name&quot;].func();</div><div class=\"line\">parent.window.frames[&quot;iframe3Name&quot;].document.getElementById(&apos;兄弟页面3中的元素ID&apos;);</div></pre></td></tr></table></figure>\n<p>##跨域下父子页面的通信</p>\n<p>###父页面向子页面传递数据<br>如果iframe所链接的是外部页面，因为安全机制就不能使用同域名下的通信方式了。</p>\n<p>实现的技巧是利用location对象的hash值，通过它传递通信数据。在父页面设置iframe的src后面多加个data字符串，然后在子页面中通过某种方式能即时的获取到这儿的data就可以了，例如：</p>\n<ol>\n<li><p>在子页面中通过setInterval方法设置定时器，监听location.href的变化即可获得上面的data信息</p>\n</li>\n<li><p>然后子页面根据这个data信息进行相应的逻辑处理</p>\n</li>\n</ol>\n<p>###子页面向父页面传递数据</p>\n<p>实现技巧就是利用一个代理iframe，它嵌入到子页面中，并且和父页面必须保持是同域，然后通过它充分利用上面第一种通信方式的实现原理就把子页面的数据传递给代理iframe，然后由于代理的iframe和主页面是同域的，所以主页面就可以利用同域的方式获取到这些数据。使用 window.top或者window.parent.parent获取浏览器最顶层window对象的引用。</p>\n<p>###详解</p>\n<blockquote>\n<p>此段博文转自<a href=\"http://tid.tenpay.com/?p=4695\">http://tid.tenpay.com/?p=4695</a>感谢作者lyndon</p>\n</blockquote>\n<p><em>先来看看哪些情况下才存在跨域的问题</em></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">编号</th>\n<th style=\"text-align:center\">URL</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">是否允许通信</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"http://www.a.com/b.js\">http://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名下</td>\n<td style=\"text-align:center\">允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a/a.js\">http://www.a.com/a/a.js</a><br/><a href=\"http://www.a.com/b/b.js\">http://www.a.com/b/b.js</a></td>\n<td style=\"text-align:center\">同一域名下不同文件夹</td>\n<td style=\"text-align:center\">允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com:8000/a.js\">http://www.a.com:8000/a.js</a><br/><a href=\"http://www.a.com/b.js\">http://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同端口</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"https://www.a.com/b.js\">https://www.a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同协议</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"http://127.0.0.1/b.js\">http://127.0.0.1/b.js</a></td>\n<td style=\"text-align:center\">域名和域名对应ip</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"http://will.a.com/b.js\">http://will.a.com/b.js</a></td>\n<td style=\"text-align:center\">主域相同，子域不同</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"http://a.com/b.js\">http://a.com/b.js</a></td>\n<td style=\"text-align:center\">同一域名，不同二级域名（同上）</td>\n<td style=\"text-align:center\">不允许（cookie这种情况下也不允许访问）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\"><a href=\"http://www.a.com/a.js\">http://www.a.com/a.js</a><br/><a href=\"http://www.b.com/b.js\">http://www.b.com/b.js</a></td>\n<td style=\"text-align:center\">不同域名</td>\n<td style=\"text-align:center\">不允许</td>\n</tr>\n</tbody>\n</table>\n<p>其中编号6、7两种情况同属于主域名相同的情况，可以设置domain来解决问题，今天就不讨论这种情况了。 对于其他跨域通信的问题，我想又可以分成两类，<strong>其一（第一种情况）</strong>是a.com下面的a.js试图请求b.com下某个接口时产生的跨域问题。<strong>其二（第二种情况）</strong>是当a.com与b.com下面的页面成父子页面关系时试图互相通信时产生的跨域问题，典型的应用场景如a.com/a.html使用iframe内嵌了b.com/b.html，大家都知道a.html内的js脚本试图访问b.html时是会被拒绝的，反之亦然。<strong>第一种情况</strong>，目前主流的方案是JSONP，高版本浏览器支持html5的话，还可以使用XHR2支持跨域通信的新特性。<strong>第二种情况</strong>，目前主要是通过代理页面或者使用postMessageAPI来做，这也是今天要讨论的话题。 第二种情况，有这样一些类似的案例：a.com/a.html使用iframe内嵌了b.com/b.html，现在希望iframe的高度能自动适应b.html的高度，使iframe不要出现滚动条。我们都知道跨域了，a.html是没办法直接读取到b.html的高度的，b.html也没办法把自己的高度告诉a.html。 直接说可以用代理页面的方法搞定这个问题吧，但是怎么代理法，先来看下面这张图：<br><img src=\"http://img.blog.csdn.net/20151009182823247\" alt=\"这里写图片描述\"><br>b.html与a.html是不能直接通信的。我们可以在b.html下面再iframe内嵌一个proxy.html页面，因为这个页面是放在a.com下面的，与a.html同域，所以它其实是可以和a.html直接通信的，假如a.html里面有定义一个方法_callback，在proxy.html可以直接top._callback()调用它。但是b.html本身和proxy.html也是不能直接通信的，所谓代理页面的桥梁作用怎么实现呢? b.html内嵌proxy.html是通过一段类似下面这样的代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;iframe id=”proxy” src=”a.com/proxy.html” name=”proxy” frameborder=”0″ width=”0″ height=”0″&gt;&lt;/iframe&gt;</div><div class=\"line\">``` </div><div class=\"line\">这个iframe的src属性b.html是有权限控制的。如果它把src设置成a.com/proxy.html?args=XXX,也就是给url加一个查询字符串，proxy.html内的js是可以读取到的。对的，这个url的查询字符串就是b.html和proxy.html之间通信的桥梁，美中不足的是每次通信都要重写一次url造成一次网络请求，这有时会对服务器及页面的运行效率产生很大的影响。同时由于参数是通过url来传递的，会有长度和数据类型的限制，搜集的资料显示：</div><div class=\"line\"></div><div class=\"line\">&gt;- IE浏览器对URL的长度现限制为2048字节。 </div><div class=\"line\">&gt;- 360极速浏览器对URL的长度限制为2118字节。 </div><div class=\"line\">&gt;- Firefox(Browser)对URL的长度限制为65536字节。 </div><div class=\"line\">&gt;- Safari(Browser)对URL的长度限制为80000字节。 </div><div class=\"line\">&gt;- Opera(Browser)对URL的长度限制为190000字节。 </div><div class=\"line\">&gt;- Google(chrome)对URL的长度限制为8182字节。</div><div class=\"line\"></div><div class=\"line\">上面的方法，通过迂回战术实现了b.html跟a.html通信，但是倒过来，a.html怎么跟b.html通信呢?嵌入在b.html里面的proxy.html可以用top快速的联系上a.html，但是要想让a.html找到proxy.html就不容易了，夹在中间的 b.html生生把它们分开了，a.html没法让b.html去找到proxy.html然后返回给它。只能采用更迂回的战术了。 顺着前面b.html到a.html的通信过程，逆向的想一下，虽然a.html没有办法主动找到proxy.html，但是proxy.html可以反过来告诉a.html它在哪里： 在proxy.html加这么一段脚本：</div></pre></td></tr></table></figure></p>\n<p>var topWin = top;<br>function getMessage(data) {<br>    alert(“messageFormTopWin:” + data);<br>}<br>function sendMessage(data) {<br>    topWin.proxyWin = window;<br>    topWin.getMessage(data);<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">在a.html加这么一段脚本：</div></pre></td></tr></table></figure></p>\n<p>var proxyWin = null;<br>function getMessage(data) {<br>   alert(“messageFormProxyWin:”+data);<br>   sendMessage(“top has receive data:”+data);<br>}<br>function sendMessage(data) {<br>    if (null != proxyWin) {<br>        proxyWin.getMessage(data);<br>    }<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">也就是必须由proxy.html先主动发送一个消息给a.html，a.html得到proxy.html页面window的引用，就可以反过来向它发送请求了。 现在a.html可以把消息发给proxy.html了，但是proxy.html怎么把消息转送到b.html？似乎这才是难点，因为它们之间才真正有着“跨域”这一道鸿沟。 这回我们不再用前面那个iframe内嵌代理页面的方法再在proxy.html内嵌一个b.com下面的代理页面了，这样实在会给人感觉嵌的太深了，四层。但是为了跨越这道鸿沟，b.com下面也加一个代理页面是免不的。不过现在我们要利用一下window.name。window.name有一个特性，就是页面在同一个浏览器窗口（标签页）中跳转时，它一直存在而且值不会改变。比如我们在a.html中设置了window.name=”a”,然后location.href=”http://b.com/b.html”跳转后，b.html可以读取window.name的值为”a”;而且window.name的值长度一般可以到达2M，ie和firefox甚至可以达到32M，这样的存储容量，足够利用起来做跨域的数据传递了。好吧，我们现在要做的就是当proxy.html拿到a.html发送过来的数据后把这个数据写入window.name中，然后跳转到b.com下面的代理页面，我们这里假设是bproxy.html。bproxy.html读取到window.name值后，通知给它父页面b.html就简单了。我们再来看这个过程可以用图大概示意一下：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183805363)</div><div class=\"line\">图例中绿色的双向箭头表示可以通信，橙色的双向箭头表示不能直接通信。 最后我们简单看一下双向通信的实测效果：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183823009)</div><div class=\"line\">b.html每次加载的时候都先给a.html发一个”连接请求”，让a.html可以找到proxy.html。所以页面第一次加载的时候会产生三个请求：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183840678)</div><div class=\"line\">每次b.html向a.html发送消息的时候会产生一个请求：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183858566)</div><div class=\"line\">每次a.html向b.html发送消息的时候会产生两个请求，其中一个是a.com/proxy.html向b.com/bproxy.html跳转产生的，另一个是b.html重新向a.html发起“连接请求”时产生的：</div><div class=\"line\">![这里写图片描述](http://img.blog.csdn.net/20151009183913229)</div><div class=\"line\"></div><div class=\"line\">最后简单看一下实测的几个测试页面代码： </div><div class=\"line\">*代码片段一，a.com/a.html:*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"http://www.w3.org/1999/xhtml\">  </p>\n<p><head><br>   <title>a.com</title><br></head>  </p>\n<p><body><br>    <div id=\"Div1\"><br>        A.com/a.html</div><br>    <input id=\"txt_msg\" type=\"text\" /><br>    <input id=\"Button1\" type=\"button\" value=\"向b.com/b.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" /><br>    <div id=\"div_msg\"><br>    </div><br>    <iframe width=\"800\" height=\"400\" id=\"mainFrame\" src=\"<A href=\"http://localhost:8091/b.com/b.htm\">http://localhost:8091/b.com/b.htm</A>\"><br>    </iframe><br>    <script type=\"text/javascript\"><br>        var proxyWin = null;<br>        function showMsg(msg) {<br>            document.getElementById(“div_msg”).innerHTML = msg;<br>        }<br>        function getMessage(data) {<br>            showMsg(“messageForm b.html to ProxyWin:” + data);<br>        }<br>        function sendMessage(data) {<br>            if (null != proxyWin) {<br>                proxyWin.getMessage(data);<br>            }<br>        }<br>    </script><br></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段二，a.com/proxy.html:*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head><br>    <title>a.com</title><br></head></p>\n<p><body></p>\n<p><div id=\"Div1\">A.com/proxy.html</div></p>\n<p><div id=\"div_msg\"></div></p>\n<p><script type=\"text/javascript\"><br>    var topWin = top;<br>    function showMsg(msg) {<br>        document.getElementById(“div_msg”).innerHTML = msg;<br>    }</p>\n<pre><code>function getMessage(data) {\n    showMsg(&quot;messageForm A.com/a.html:&quot; + data + &quot;&lt;br/&gt;两秒后将跳转到B.com/bproxy.html&quot;);\n    window.name = data;\n    setTimeout(function () { location.href = &quot;&lt;a href=&quot;http://localhost:8091/b.com/bproxy.htm&quot;&gt;http://localhost:8091/b.com/bproxy.htm&lt;/a&gt;&quot; }, 2000);// 为了能让大家看到跳转的过程，所以加了个延时\n}\n\nfunction sendMessage(data) {\n    topWin.proxyWin = window;\n    topWin.getMessage(data);\n}\n\nvar search = location.search.substring(1);\nshowMsg(&quot;messageForm B.com/b.html:&quot; + search);\nsendMessage(search);\n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段三，b.com/b.html*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head><br>    <title>b.com</title><br></head></p>\n<p><body><br>    <div id=\"Div1\"><br>        B.com/b.html</div><br>    <input id=\"txt_msg\" type=\"text\" /><br>    <input id=\"Button1\" type=\"button\" value=\"向A.com/a.html发送一条消息\" onclick=\"sendMessage(document.getElementById('txt_msg').value)\" /><br>    <div id=\"div_msg\"><br>    </div><br>    <iframe id=\"proxy\" name=\"proxy\" style=\"width: 600px; height: 300px\"></iframe><br>    <script type=\"text/javascript\"><br>        function showMsg(msg) {<br>            document.getElementById(“div_msg”).innerHTML = msg;<br>        }<br>        function sendMessage(data) {<br>            var proxy = document.getElementById(“proxy”);<br>            proxy.src=”<A href=\"http://localhost:8090/a.com/proxy.htm?data\">http://localhost:8090/a.com/proxy.htm?data</A>=” + data;<br>        }<br>        function connect() {<br>            sendMessage(“connect”);<br>        }<br>        function getMessage(data) {<br>            showMsg(“messageForm a.html to ProxyWin:” + data);<br>            connect();<br>        }</p>\n<pre><code>    connect(); // 页面一加载，就执行一次连接\n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段四，b.com/bproxy.html*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head><br>    <title>b.com</title><br></head></p>\n<p><body><br>    <div id=\"Div1\"><br>        B.com/bproxy.html</div><br>    <div id=\"div_msg\"><br>    </div><br>    <script type=\"text/javascript\"><br>        var parentWin = parent;<br>        var data = null;</p>\n<pre><code>    function getMessage() {\n        if (window.name) {\n            data = window.name;\n            parentWin.getMessage(data);\n        }\n        document.getElementById(&quot;div_msg&quot;).innerHTML = &quot;messageForm a.com/proxy.html:&quot; + data;\n\n    }\n    getMessage();         \n&lt;/script&gt;\n</code></pre><p></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">好吧，现在我必须把话锋调转一下了。前面讲的这么多，也只是抛出来一些之前我们可能会采用的跨域通信方法，事实上代理页面、url传参数和window.name、甚至还有一些利用url的hash值的跨域传值方法，都能百度到不少相关资料。但它们都逃不开代理页面，也就不可避免的要产生网络请求，而事实上这并不是我们的本意，我们原本希望它们能够直接在客户端通信，避免不必要的网络请求开销——这些开销，在访问量超大的站点可能会对服务器产生相当大的压力。那么，有没有更完美一点的替代方案呢？ 必须给大家推荐postMessage。postMessage 正是为了满足一些合理的、不同站点之间的内容能在浏览器端进行交互的需求而设计的。利用postMessage API实现跨域通信非常简单，我们直接看一下实例的代码： </div><div class=\"line\">*代码片段五，A.com/a.html：*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head runat=\"server\"><br>    <title>A.com/a.html</title><br>    <script type=\"text/javascript\"><br>        var trustedOrigin = “<A href=\"http://localhost:8091/\">http://localhost:8091</A>“;</p>\n<pre><code>    function messageHandler(e) {\n        if (e.origin == trustedOrigin) {//接收消息的时候，判断消息是否来自可信的源，这个源是否可信则完全看自己的定义了。\n            showMsg(e.data);//e.data才是真实要传递的数据\n        } else {\n            // ignore messages from other origins\n        }\n    }\n\n    function sendString(s) {//发送消息\n        document.getElementById(&quot;widget&quot;).contentWindow.postMessage(s, trustedOrigin);\n    }\n\n    function showMsg(message) {\n        document.getElementById(&quot;status&quot;).innerHTML = message;\n    }\n\n    function sendStatus() {\n        var statusText = document.getElementById(&quot;statusText&quot;).value;\n        sendString(statusText);\n    }\n\n    function loadDemo() {\n        addEvent(document.getElementById(&quot;sendButton&quot;), &quot;click&quot;, sendStatus);\n        sendStatus();\n    }\n\n    function addEvent(obj, trigger, fun) {\n        if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n        else if (obj.attachEvent) obj.attachEvent(&apos;on&apos; + trigger, fun);\n        else obj[&apos;on&apos; + trigger] = fun;\n    }\n    addEvent(window, &quot;load&quot;, loadDemo);\n    addEvent(window, &quot;message&quot;, messageHandler);\n\n&lt;/script&gt;\n</code></pre><p></head></p>\n<p><body><br>    <h1>A.com/a.html</h1><br>    <p><b>源</b>: <A href=\"http://localhost:8090</p\">http://localhost:8090</p</A>&gt;<br>    <input type=\"text\" id=\"statusText\" value=\"msg from a.com/a.html\"><br>    <button id=\"sendButton\">向b.com/b.html发送消息</button><br>    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p><br>    <iframe id=\"widget\" width=\"800\" height=\"400\" src=\"<A href=\"http://localhost:8091/PostMessage/Default.aspx%22%3E%3C/iframe\">http://localhost:8091/PostMessage/Default.aspx\"></iframe</A>&gt;<br></body><br></html><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*代码片段六，B.com/b.html：*</div></pre></td></tr></table></figure></p>\n<p><html xmlns=\"<A href=\"http://www.w3.org/1999/xhtml\">http://www.w3.org/1999/xhtml</A>\"></p>\n<p><head runat=\"server\"><br>    <title>B.com/b.html</title><br>    <script type=\"text/javascript\"><br>        //检查postMessage 是否可以用：window.postMessage===undefined<br>        //定义信任的消息源<br>        var trustedOrigin = “<A href=\"http://localhost:8090/\">http://localhost:8090</A>“;<br>        function messageHandler(e) {<br>            if (e.origin === “<A href=\"http://localhost:8090/\">http://localhost:8090</A>“) {<br>                showMsg(e.data);<br>            } else {<br>                // ignore messages from other origins<br>            }<br>        }</p>\n<pre><code>    function sendString(s) {\n        window.top.postMessage(s, trustedOrigin); //第二个参数是消息传送的目的地\n    }\n\n    function loadDemo() {\n        addEvent(document.getElementById(&quot;actionButton&quot;), &quot;click&quot;, function () {\n            var messageText = document.getElementById(&quot;messageText&quot;).value;\n            sendString(messageText);\n        });\n    }\n\n    function showMsg(message) {\n        document.getElementById(&quot;status&quot;).innerHTML = message;\n    }\n\n    function addEvent(obj, trigger, fun) {\n        if (obj.addEventListener) obj.addEventListener(trigger, fun, false);\n        else if (obj.attachEvent) obj.attachEvent(&apos;on&apos; + trigger, fun);\n        else obj[&apos;on&apos; + trigger] = fun;\n    }\n    addEvent(window, &quot;load&quot;, loadDemo);\n    addEvent(window, &quot;message&quot;, messageHandler);\n&lt;/script&gt;\n</code></pre><p></head></p>\n<p><body><br>    <h1>B.com/b.html</h1><br>    <p><b>源</b>: <A href=\"http://localhost:8091</p\">http://localhost:8091</p</A>&gt;<br>    <p>接收到来自a.com/a.html的消息: <strong id=\"status\"></strong>.<p><br>            <div><br>                <input type=\"text\" id=\"messageText\" value=\"msg from b.com/b.html\"><br>                <button id=\"actionButton\"> 向a.com/a.html发送一个消息</button><br>            </div><br></body><br></html><br>```<br>代码的关键是message事件是一个拥有data（数据）和origin(来源)属性的DOM事件。data属性是发送的实际数据，origin属性是发送来源。Origin属性很关键，有了这个属性，接收方可以轻易的忽略掉来自不可信源的消息，也就能有效避免跨域通信这个开口给我们的源安全带来的隐患。接口很强大，所以代码很简单。我们可以抓包看一下，这个通信过程完全是在浏览器端的，没有产生任何的网络请求。同时这个接口目前已经得到了绝大多数浏览器的支持，包括IE8及以上版本，参见下面的图表：<br><img src=\"http://img.blog.csdn.net/20151009184516692\" alt=\"这里写图片描述\"><br>但是为了覆盖ie6等低版本浏览器，我们完整的方案里面还是要包含一下兼容代码，就是最开始介绍的代理页面的方法了，但必须是以postMessage为主，这样即便最后会有某些浏览器因为这种通信产生一些网络请求，比例也是非常低的了。</p>\n"},{"title":"openVPN连接多个地址失败【填坑】","date":"2015-12-17T16:00:00.000Z","_content":"# openVPN连接多个地址\n\n##**openVPN log报错信息**##\n><font color=red> All TAP-Win32 Adapters On This System Are Currently In Use\n>或\n> All TAP-Windows Adapters On This System Are Currently In Use</font>\n![这里写图片描述](http://img.blog.csdn.net/20151218182820958)\n\n\n\n##**解决方案**##\n\n>遇到问题不要慌，逐一检查\n\n<font color=blue> \n1. 首先查网络\n2. 确认帐号密码\n3. 检查软件配置，证书、私钥等\n4. 检查版本跟系统有没有冲突，如64x软件装在32xOS中</font>\n*以上白痴问题，相信你不会发这些低级错误，从下面步骤去检查吧*\n<font color=blue> \n5.  看看你的虚拟网卡有没有被禁，如果如图，右击【启用】重试</font>\n\t![这里写图片描述](http://img.blog.csdn.net/20151218184535416)\n*通过以上步骤，大部分人应该第一个vpn连接是可以连通的，但是第二个还是连不了？*\n>问题依然解决不了不要急，记得去查日志\n\n<font color=blue> \n6. 这时候我们就要查看Log了，因为他会记载大部分的关键报错\n![这里写图片描述](http://img.blog.csdn.net/20151218185327076)\n![这里写图片描述](http://img.blog.csdn.net/20151218185501808)\n很明显，报错显示【系统所有的适配器都在使用中】，应该是适配器的问题，我们需要再次进入【网络和共享中心】去查看\n![这里写图片描述](http://img.blog.csdn.net/20151218191238700)\n可以看到，我们有一个【TAP-Windows Adapter V9】的虚拟网卡已经在运行了，因为程序在安装的时候默认只会添加一个【虚拟网卡】所以想办法再弄一个出来，GG搜一搜很容易就可以找到解决方案。\n到HOME下去搜索\n![这里写图片描述](http://img.blog.csdn.net/20151218191439680)\n右击【以管理员身份运行】\n然后你就可以看到多了一个适配器\n![这里写图片描述](http://img.blog.csdn.net/20151218191520355)\n我给他取名【虚拟网卡 2】（其实叫啥都行，不重复就可以）\n7. 最后试试重连两个VPN\n![这里写图片描述](http://img.blog.csdn.net/20151218191737573)\n</font>\n##**小结**##\n>很惊喜吧？是不是感觉“原来这么简单！”，我当初也是百思不得其解。。。唉，还是太急躁，早点看Log不就完事儿了。以后大家要学会冷静啊！哈哈！！\n\n本人OS版本为Win8.1x64，至于WinXP、Win7、MacOS，的解决思路一样，只是设置的名字和位置不一样罢了，这里就不做赘述。\n另外，如果你想连3个或者更多连接，那就多建几个呗，但不建议搞太多，一般能用到4个就很多了。","source":"_posts/openVPN连接多个地址失败【填坑】.md","raw":"---\ntitle: openVPN连接多个地址失败【填坑】\ndate: 2015-12-18\ntags: \"openVPN\"\n---\n# openVPN连接多个地址\n\n##**openVPN log报错信息**##\n><font color=red> All TAP-Win32 Adapters On This System Are Currently In Use\n>或\n> All TAP-Windows Adapters On This System Are Currently In Use</font>\n![这里写图片描述](http://img.blog.csdn.net/20151218182820958)\n\n\n\n##**解决方案**##\n\n>遇到问题不要慌，逐一检查\n\n<font color=blue> \n1. 首先查网络\n2. 确认帐号密码\n3. 检查软件配置，证书、私钥等\n4. 检查版本跟系统有没有冲突，如64x软件装在32xOS中</font>\n*以上白痴问题，相信你不会发这些低级错误，从下面步骤去检查吧*\n<font color=blue> \n5.  看看你的虚拟网卡有没有被禁，如果如图，右击【启用】重试</font>\n\t![这里写图片描述](http://img.blog.csdn.net/20151218184535416)\n*通过以上步骤，大部分人应该第一个vpn连接是可以连通的，但是第二个还是连不了？*\n>问题依然解决不了不要急，记得去查日志\n\n<font color=blue> \n6. 这时候我们就要查看Log了，因为他会记载大部分的关键报错\n![这里写图片描述](http://img.blog.csdn.net/20151218185327076)\n![这里写图片描述](http://img.blog.csdn.net/20151218185501808)\n很明显，报错显示【系统所有的适配器都在使用中】，应该是适配器的问题，我们需要再次进入【网络和共享中心】去查看\n![这里写图片描述](http://img.blog.csdn.net/20151218191238700)\n可以看到，我们有一个【TAP-Windows Adapter V9】的虚拟网卡已经在运行了，因为程序在安装的时候默认只会添加一个【虚拟网卡】所以想办法再弄一个出来，GG搜一搜很容易就可以找到解决方案。\n到HOME下去搜索\n![这里写图片描述](http://img.blog.csdn.net/20151218191439680)\n右击【以管理员身份运行】\n然后你就可以看到多了一个适配器\n![这里写图片描述](http://img.blog.csdn.net/20151218191520355)\n我给他取名【虚拟网卡 2】（其实叫啥都行，不重复就可以）\n7. 最后试试重连两个VPN\n![这里写图片描述](http://img.blog.csdn.net/20151218191737573)\n</font>\n##**小结**##\n>很惊喜吧？是不是感觉“原来这么简单！”，我当初也是百思不得其解。。。唉，还是太急躁，早点看Log不就完事儿了。以后大家要学会冷静啊！哈哈！！\n\n本人OS版本为Win8.1x64，至于WinXP、Win7、MacOS，的解决思路一样，只是设置的名字和位置不一样罢了，这里就不做赘述。\n另外，如果你想连3个或者更多连接，那就多建几个呗，但不建议搞太多，一般能用到4个就很多了。","slug":"openVPN连接多个地址失败【填坑】","published":1,"updated":"2017-05-16T13:28:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610rd0005xwxsz81z1r6s","content":"<h1 id=\"openVPN连接多个地址\"><a href=\"#openVPN连接多个地址\" class=\"headerlink\" title=\"openVPN连接多个地址\"></a>openVPN连接多个地址</h1><p>##<strong>openVPN log报错信息</strong>##</p>\n<blockquote>\n<p><font color=\"red\"> All TAP-Win32 Adapters On This System Are Currently In Use<br>或<br>All TAP-Windows Adapters On This System Are Currently In Use</font><br><img src=\"http://img.blog.csdn.net/20151218182820958\" alt=\"这里写图片描述\"></p>\n</blockquote>\n<p>##<strong>解决方案</strong>##</p>\n<blockquote>\n<p>遇到问题不要慌，逐一检查</p>\n</blockquote>\n<p><font color=\"blue\"> </font></p>\n<ol>\n<li>首先查网络</li>\n<li>确认帐号密码</li>\n<li>检查软件配置，证书、私钥等</li>\n<li>检查版本跟系统有没有冲突，如64x软件装在32xOS中<br><em>以上白痴问题，相信你不会发这些低级错误，从下面步骤去检查吧</em><font color=\"blue\"> </font></li>\n<li>看看你的虚拟网卡有没有被禁，如果如图，右击【启用】重试<br><img src=\"http://img.blog.csdn.net/20151218184535416\" alt=\"这里写图片描述\"><br><em>通过以上步骤，大部分人应该第一个vpn连接是可以连通的，但是第二个还是连不了？</em><blockquote>\n<p>问题依然解决不了不要急，记得去查日志</p>\n</blockquote>\n</li>\n</ol>\n<p><font color=\"blue\"> </font></p>\n<ol>\n<li>这时候我们就要查看Log了，因为他会记载大部分的关键报错<br><img src=\"http://img.blog.csdn.net/20151218185327076\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20151218185501808\" alt=\"这里写图片描述\"><br>很明显，报错显示【系统所有的适配器都在使用中】，应该是适配器的问题，我们需要再次进入【网络和共享中心】去查看<br><img src=\"http://img.blog.csdn.net/20151218191238700\" alt=\"这里写图片描述\"><br>可以看到，我们有一个【TAP-Windows Adapter V9】的虚拟网卡已经在运行了，因为程序在安装的时候默认只会添加一个【虚拟网卡】所以想办法再弄一个出来，GG搜一搜很容易就可以找到解决方案。<br>到HOME下去搜索<br><img src=\"http://img.blog.csdn.net/20151218191439680\" alt=\"这里写图片描述\"><br>右击【以管理员身份运行】<br>然后你就可以看到多了一个适配器<br><img src=\"http://img.blog.csdn.net/20151218191520355\" alt=\"这里写图片描述\"><br>我给他取名【虚拟网卡 2】（其实叫啥都行，不重复就可以）</li>\n<li>最后试试重连两个VPN<br><img src=\"http://img.blog.csdn.net/20151218191737573\" alt=\"这里写图片描述\"><br><br>##<strong>小结</strong>##<blockquote>\n<p>很惊喜吧？是不是感觉“原来这么简单！”，我当初也是百思不得其解。。。唉，还是太急躁，早点看Log不就完事儿了。以后大家要学会冷静啊！哈哈！！</p>\n</blockquote>\n</li>\n</ol>\n<p>本人OS版本为Win8.1x64，至于WinXP、Win7、MacOS，的解决思路一样，只是设置的名字和位置不一样罢了，这里就不做赘述。<br>另外，如果你想连3个或者更多连接，那就多建几个呗，但不建议搞太多，一般能用到4个就很多了。</p>\n","excerpt":"","more":"<h1 id=\"openVPN连接多个地址\"><a href=\"#openVPN连接多个地址\" class=\"headerlink\" title=\"openVPN连接多个地址\"></a>openVPN连接多个地址</h1><p>##<strong>openVPN log报错信息</strong>##</p>\n<blockquote>\n<p><font color=red> All TAP-Win32 Adapters On This System Are Currently In Use<br>或<br>All TAP-Windows Adapters On This System Are Currently In Use</font><br><img src=\"http://img.blog.csdn.net/20151218182820958\" alt=\"这里写图片描述\"></p>\n</blockquote>\n<p>##<strong>解决方案</strong>##</p>\n<blockquote>\n<p>遇到问题不要慌，逐一检查</p>\n</blockquote>\n<p><font color=blue> </p>\n<ol>\n<li>首先查网络</li>\n<li>确认帐号密码</li>\n<li>检查软件配置，证书、私钥等</li>\n<li>检查版本跟系统有没有冲突，如64x软件装在32xOS中</font><br><em>以上白痴问题，相信你不会发这些低级错误，从下面步骤去检查吧</em><font color=blue> </li>\n<li>看看你的虚拟网卡有没有被禁，如果如图，右击【启用】重试</font><br><img src=\"http://img.blog.csdn.net/20151218184535416\" alt=\"这里写图片描述\"><br><em>通过以上步骤，大部分人应该第一个vpn连接是可以连通的，但是第二个还是连不了？</em><blockquote>\n<p>问题依然解决不了不要急，记得去查日志</p>\n</blockquote>\n</li>\n</ol>\n<p><font color=blue> </p>\n<ol>\n<li>这时候我们就要查看Log了，因为他会记载大部分的关键报错<br><img src=\"http://img.blog.csdn.net/20151218185327076\" alt=\"这里写图片描述\"><br><img src=\"http://img.blog.csdn.net/20151218185501808\" alt=\"这里写图片描述\"><br>很明显，报错显示【系统所有的适配器都在使用中】，应该是适配器的问题，我们需要再次进入【网络和共享中心】去查看<br><img src=\"http://img.blog.csdn.net/20151218191238700\" alt=\"这里写图片描述\"><br>可以看到，我们有一个【TAP-Windows Adapter V9】的虚拟网卡已经在运行了，因为程序在安装的时候默认只会添加一个【虚拟网卡】所以想办法再弄一个出来，GG搜一搜很容易就可以找到解决方案。<br>到HOME下去搜索<br><img src=\"http://img.blog.csdn.net/20151218191439680\" alt=\"这里写图片描述\"><br>右击【以管理员身份运行】<br>然后你就可以看到多了一个适配器<br><img src=\"http://img.blog.csdn.net/20151218191520355\" alt=\"这里写图片描述\"><br>我给他取名【虚拟网卡 2】（其实叫啥都行，不重复就可以）</li>\n<li>最后试试重连两个VPN<br><img src=\"http://img.blog.csdn.net/20151218191737573\" alt=\"这里写图片描述\"><br></font><br>##<strong>小结</strong>##<blockquote>\n<p>很惊喜吧？是不是感觉“原来这么简单！”，我当初也是百思不得其解。。。唉，还是太急躁，早点看Log不就完事儿了。以后大家要学会冷静啊！哈哈！！</p>\n</blockquote>\n</li>\n</ol>\n<p>本人OS版本为Win8.1x64，至于WinXP、Win7、MacOS，的解决思路一样，只是设置的名字和位置不一样罢了，这里就不做赘述。<br>另外，如果你想连3个或者更多连接，那就多建几个呗，但不建议搞太多，一般能用到4个就很多了。</p>\n"},{"title":"前端国际化小结","date":"2016-12-17T12:00:00.000Z","_content":"> 近期在做国际化的改造，做了相应的调研，简单做下项目前端国际化的小结\n\n国际化可以分为前端国际化和后端国际化，也可以是前后端组合的国际化\n后端多为spring国际化，这里不做展开，百度一下到处都是\n\n## 常见型\n\n常见的前端国际化方法步骤如下：（原理）\n \n 1. 定义国际化配置\n 2. 根据环境读取配置 \n 3. 将配置展现在页面上\n\n展开说：\n\n 1. 定义国际化配置：\n\t定义的方式有多种，多以文件的形式单独保存，如json，js，properties 等，\n\t并且将配置信息以键值对的形式保存备用\n \n 2. 根据环境读取配置：\n\t所谓环境说白了就是用户选择的标志，形式如下：\n\t**hash型**：#cn; #en; #us \n\t**saerch型**：?lan=cn; ?lan=en; ?lan=us\n\t**url/meta型**： 163.com/cn/; 163.com/en\n\t**缓存型**：缓存形式多为cookie，默认cn，用户重新设定后将缓存更新\n \n 3. 将配置展现在页面上：\n\t使用三方插件或者自己编写插件将配置信息映射到页面上，\n\t可以使用，juery.i18n.js 或 react、angular国际化插件等regular暂无插件\n\t插件的基本原理都是做字典查询键值匹配替换。\n\t\n以上三步任意组合都可以完成国际化的任务，只是效率各有不同，可根据项目做自由组合\n\n### 优缺点\n\n**优点**：\n\n 1. 语言包形式统一管理\n 2. 工程较大时节省资源\n 3. 对于支持多语言项目复用性强\n\n**缺点**：\n\n1. 配置文件配置复杂\n2. 以键值对的形式定位容易产生混乱\n3. 可读性差\n4. 后期维护时定位比较负责易出错\n\n## 不常见型\n\n不常见的方法步骤如下：（原理）\n\n1. 将国际化配置分散在各个文件中如：\n\t`<a class='i18n'>登录|登入|Sign in|サインイン|로그인</a>`\n2. 根据环境确定国际化标记：\n\tcn:0, tw:1, en:2, jp:3, kr:4\n3. 根据国际化标记显示相应信息\n\t全局搜索class=i18n的元素，保留相应信息\n\n### 优缺点\n\n**优点**：\n\n1. 可读性强\n2. 易定位\n3. 配置简单\n4. 内容较少时效率高\n\n**缺点**：\n\n1. 项目工程量大后会浪费资源\n2. 随着支持的语言种类繁多后不容易维护\n3. 复用性差且耦合度高\n\n## 极端通用型\n使用google翻译插件\n\nhttps://support.google.com/translate/#googtrans/en/zh-CN&topic=7011755\n\n适用项目：\n\n内容庞大且不在乎准确性，时效性强，更新频繁，支持世界语言\n\n实例：\n\n阿里国际卖场 https://www.aliexpress.com/\n![这里写图片描述](http://img.blog.csdn.net/20161219164851113?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2lsbHNwYWNl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n## 项目结合：\n\n1. 以异步code形式传递信息的，适合做前端国际化\n2. 同步模板式的项目，可使用后端做国际化，如果想轻后端，也可以做前端国际化或者前后端结合做国际化\n\n## 两个例子\n1. 普通异步项目：\n\t**nej/jquery项目**\n\t如果仅需要支持中文和英文，建议使用第二种形式，如果需要支持多国语言，建议使用第一种形式，code错误码可以添加标记定向到国际版错误信息\n2. 组件式项目：\n\t**Regular/Angular/React...项目**\n\t因为数据双向绑定和组件化的特点，可以将国际化版本做在组件里，\t通过标记继承控制版本的显示，利用路由系统解析hash值，如： \n\t\t'#/cn/s1' : 中文页面S1\n\t\t'#/s1' : 页面S1\n\t\t'#/en/s1' : 英文页面S1\n","source":"_posts/前端国际化小结.md","raw":"---\ntitle: 前端国际化小结\ndate: 2016-12-17 20:00:00\ntags: \"国际化\"\n---\n> 近期在做国际化的改造，做了相应的调研，简单做下项目前端国际化的小结\n\n国际化可以分为前端国际化和后端国际化，也可以是前后端组合的国际化\n后端多为spring国际化，这里不做展开，百度一下到处都是\n\n## 常见型\n\n常见的前端国际化方法步骤如下：（原理）\n \n 1. 定义国际化配置\n 2. 根据环境读取配置 \n 3. 将配置展现在页面上\n\n展开说：\n\n 1. 定义国际化配置：\n\t定义的方式有多种，多以文件的形式单独保存，如json，js，properties 等，\n\t并且将配置信息以键值对的形式保存备用\n \n 2. 根据环境读取配置：\n\t所谓环境说白了就是用户选择的标志，形式如下：\n\t**hash型**：#cn; #en; #us \n\t**saerch型**：?lan=cn; ?lan=en; ?lan=us\n\t**url/meta型**： 163.com/cn/; 163.com/en\n\t**缓存型**：缓存形式多为cookie，默认cn，用户重新设定后将缓存更新\n \n 3. 将配置展现在页面上：\n\t使用三方插件或者自己编写插件将配置信息映射到页面上，\n\t可以使用，juery.i18n.js 或 react、angular国际化插件等regular暂无插件\n\t插件的基本原理都是做字典查询键值匹配替换。\n\t\n以上三步任意组合都可以完成国际化的任务，只是效率各有不同，可根据项目做自由组合\n\n### 优缺点\n\n**优点**：\n\n 1. 语言包形式统一管理\n 2. 工程较大时节省资源\n 3. 对于支持多语言项目复用性强\n\n**缺点**：\n\n1. 配置文件配置复杂\n2. 以键值对的形式定位容易产生混乱\n3. 可读性差\n4. 后期维护时定位比较负责易出错\n\n## 不常见型\n\n不常见的方法步骤如下：（原理）\n\n1. 将国际化配置分散在各个文件中如：\n\t`<a class='i18n'>登录|登入|Sign in|サインイン|로그인</a>`\n2. 根据环境确定国际化标记：\n\tcn:0, tw:1, en:2, jp:3, kr:4\n3. 根据国际化标记显示相应信息\n\t全局搜索class=i18n的元素，保留相应信息\n\n### 优缺点\n\n**优点**：\n\n1. 可读性强\n2. 易定位\n3. 配置简单\n4. 内容较少时效率高\n\n**缺点**：\n\n1. 项目工程量大后会浪费资源\n2. 随着支持的语言种类繁多后不容易维护\n3. 复用性差且耦合度高\n\n## 极端通用型\n使用google翻译插件\n\nhttps://support.google.com/translate/#googtrans/en/zh-CN&topic=7011755\n\n适用项目：\n\n内容庞大且不在乎准确性，时效性强，更新频繁，支持世界语言\n\n实例：\n\n阿里国际卖场 https://www.aliexpress.com/\n![这里写图片描述](http://img.blog.csdn.net/20161219164851113?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2lsbHNwYWNl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n## 项目结合：\n\n1. 以异步code形式传递信息的，适合做前端国际化\n2. 同步模板式的项目，可使用后端做国际化，如果想轻后端，也可以做前端国际化或者前后端结合做国际化\n\n## 两个例子\n1. 普通异步项目：\n\t**nej/jquery项目**\n\t如果仅需要支持中文和英文，建议使用第二种形式，如果需要支持多国语言，建议使用第一种形式，code错误码可以添加标记定向到国际版错误信息\n2. 组件式项目：\n\t**Regular/Angular/React...项目**\n\t因为数据双向绑定和组件化的特点，可以将国际化版本做在组件里，\t通过标记继承控制版本的显示，利用路由系统解析hash值，如： \n\t\t'#/cn/s1' : 中文页面S1\n\t\t'#/s1' : 页面S1\n\t\t'#/en/s1' : 英文页面S1\n","slug":"前端国际化小结","published":1,"updated":"2017-05-30T06:10:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610rg0008xwxsrwfq8c8k","content":"<blockquote>\n<p>近期在做国际化的改造，做了相应的调研，简单做下项目前端国际化的小结</p>\n</blockquote>\n<p>国际化可以分为前端国际化和后端国际化，也可以是前后端组合的国际化<br>后端多为spring国际化，这里不做展开，百度一下到处都是</p>\n<h2 id=\"常见型\"><a href=\"#常见型\" class=\"headerlink\" title=\"常见型\"></a>常见型</h2><p>常见的前端国际化方法步骤如下：（原理）</p>\n<ol>\n<li>定义国际化配置</li>\n<li>根据环境读取配置 </li>\n<li>将配置展现在页面上</li>\n</ol>\n<p>展开说：</p>\n<ol>\n<li><p>定义国际化配置：<br>定义的方式有多种，多以文件的形式单独保存，如json，js，properties 等，<br>并且将配置信息以键值对的形式保存备用</p>\n</li>\n<li><p>根据环境读取配置：<br>所谓环境说白了就是用户选择的标志，形式如下：<br><strong>hash型</strong>：#cn; #en; #us<br><strong>saerch型</strong>：?lan=cn; ?lan=en; ?lan=us<br><strong>url/meta型</strong>： 163.com/cn/; 163.com/en<br><strong>缓存型</strong>：缓存形式多为cookie，默认cn，用户重新设定后将缓存更新</p>\n</li>\n<li><p>将配置展现在页面上：<br>使用三方插件或者自己编写插件将配置信息映射到页面上，<br>可以使用，juery.i18n.js 或 react、angular国际化插件等regular暂无插件<br>插件的基本原理都是做字典查询键值匹配替换。</p>\n</li>\n</ol>\n<p>以上三步任意组合都可以完成国际化的任务，只是效率各有不同，可根据项目做自由组合</p>\n<h3 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点</strong>：</p>\n<ol>\n<li>语言包形式统一管理</li>\n<li>工程较大时节省资源</li>\n<li>对于支持多语言项目复用性强</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>配置文件配置复杂</li>\n<li>以键值对的形式定位容易产生混乱</li>\n<li>可读性差</li>\n<li>后期维护时定位比较负责易出错</li>\n</ol>\n<h2 id=\"不常见型\"><a href=\"#不常见型\" class=\"headerlink\" title=\"不常见型\"></a>不常见型</h2><p>不常见的方法步骤如下：（原理）</p>\n<ol>\n<li>将国际化配置分散在各个文件中如：<br> <code>&lt;a class=&#39;i18n&#39;&gt;登录|登入|Sign in|サインイン|로그인&lt;/a&gt;</code></li>\n<li>根据环境确定国际化标记：<br> cn:0, tw:1, en:2, jp:3, kr:4</li>\n<li>根据国际化标记显示相应信息<br> 全局搜索class=i18n的元素，保留相应信息</li>\n</ol>\n<h3 id=\"优缺点-1\"><a href=\"#优缺点-1\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点</strong>：</p>\n<ol>\n<li>可读性强</li>\n<li>易定位</li>\n<li>配置简单</li>\n<li>内容较少时效率高</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>项目工程量大后会浪费资源</li>\n<li>随着支持的语言种类繁多后不容易维护</li>\n<li>复用性差且耦合度高</li>\n</ol>\n<h2 id=\"极端通用型\"><a href=\"#极端通用型\" class=\"headerlink\" title=\"极端通用型\"></a>极端通用型</h2><p>使用google翻译插件</p>\n<p><a href=\"https://support.google.com/translate/#googtrans/en/zh-CN&amp;topic=7011755\" target=\"_blank\" rel=\"external\">https://support.google.com/translate/#googtrans/en/zh-CN&amp;topic=7011755</a></p>\n<p>适用项目：</p>\n<p>内容庞大且不在乎准确性，时效性强，更新频繁，支持世界语言</p>\n<p>实例：</p>\n<p>阿里国际卖场 <a href=\"https://www.aliexpress.com/\" target=\"_blank\" rel=\"external\">https://www.aliexpress.com/</a><br><img src=\"http://img.blog.csdn.net/20161219164851113?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2lsbHNwYWNl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<h2 id=\"项目结合：\"><a href=\"#项目结合：\" class=\"headerlink\" title=\"项目结合：\"></a>项目结合：</h2><ol>\n<li>以异步code形式传递信息的，适合做前端国际化</li>\n<li>同步模板式的项目，可使用后端做国际化，如果想轻后端，也可以做前端国际化或者前后端结合做国际化</li>\n</ol>\n<h2 id=\"两个例子\"><a href=\"#两个例子\" class=\"headerlink\" title=\"两个例子\"></a>两个例子</h2><ol>\n<li>普通异步项目：<br> <strong>nej/jquery项目</strong><br> 如果仅需要支持中文和英文，建议使用第二种形式，如果需要支持多国语言，建议使用第一种形式，code错误码可以添加标记定向到国际版错误信息</li>\n<li>组件式项目：<br> <strong>Regular/Angular/React…项目</strong><br> 因为数据双向绑定和组件化的特点，可以将国际化版本做在组件里，    通过标记继承控制版本的显示，利用路由系统解析hash值，如： <pre><code>&apos;#/cn/s1&apos; : 中文页面S1\n&apos;#/s1&apos; : 页面S1\n&apos;#/en/s1&apos; : 英文页面S1\n</code></pre></li>\n</ol>\n","excerpt":"","more":"<blockquote>\n<p>近期在做国际化的改造，做了相应的调研，简单做下项目前端国际化的小结</p>\n</blockquote>\n<p>国际化可以分为前端国际化和后端国际化，也可以是前后端组合的国际化<br>后端多为spring国际化，这里不做展开，百度一下到处都是</p>\n<h2 id=\"常见型\"><a href=\"#常见型\" class=\"headerlink\" title=\"常见型\"></a>常见型</h2><p>常见的前端国际化方法步骤如下：（原理）</p>\n<ol>\n<li>定义国际化配置</li>\n<li>根据环境读取配置 </li>\n<li>将配置展现在页面上</li>\n</ol>\n<p>展开说：</p>\n<ol>\n<li><p>定义国际化配置：<br>定义的方式有多种，多以文件的形式单独保存，如json，js，properties 等，<br>并且将配置信息以键值对的形式保存备用</p>\n</li>\n<li><p>根据环境读取配置：<br>所谓环境说白了就是用户选择的标志，形式如下：<br><strong>hash型</strong>：#cn; #en; #us<br><strong>saerch型</strong>：?lan=cn; ?lan=en; ?lan=us<br><strong>url/meta型</strong>： 163.com/cn/; 163.com/en<br><strong>缓存型</strong>：缓存形式多为cookie，默认cn，用户重新设定后将缓存更新</p>\n</li>\n<li><p>将配置展现在页面上：<br>使用三方插件或者自己编写插件将配置信息映射到页面上，<br>可以使用，juery.i18n.js 或 react、angular国际化插件等regular暂无插件<br>插件的基本原理都是做字典查询键值匹配替换。</p>\n</li>\n</ol>\n<p>以上三步任意组合都可以完成国际化的任务，只是效率各有不同，可根据项目做自由组合</p>\n<h3 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点</strong>：</p>\n<ol>\n<li>语言包形式统一管理</li>\n<li>工程较大时节省资源</li>\n<li>对于支持多语言项目复用性强</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>配置文件配置复杂</li>\n<li>以键值对的形式定位容易产生混乱</li>\n<li>可读性差</li>\n<li>后期维护时定位比较负责易出错</li>\n</ol>\n<h2 id=\"不常见型\"><a href=\"#不常见型\" class=\"headerlink\" title=\"不常见型\"></a>不常见型</h2><p>不常见的方法步骤如下：（原理）</p>\n<ol>\n<li>将国际化配置分散在各个文件中如：<br> <code>&lt;a class=&#39;i18n&#39;&gt;登录|登入|Sign in|サインイン|로그인&lt;/a&gt;</code></li>\n<li>根据环境确定国际化标记：<br> cn:0, tw:1, en:2, jp:3, kr:4</li>\n<li>根据国际化标记显示相应信息<br> 全局搜索class=i18n的元素，保留相应信息</li>\n</ol>\n<h3 id=\"优缺点-1\"><a href=\"#优缺点-1\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h3><p><strong>优点</strong>：</p>\n<ol>\n<li>可读性强</li>\n<li>易定位</li>\n<li>配置简单</li>\n<li>内容较少时效率高</li>\n</ol>\n<p><strong>缺点</strong>：</p>\n<ol>\n<li>项目工程量大后会浪费资源</li>\n<li>随着支持的语言种类繁多后不容易维护</li>\n<li>复用性差且耦合度高</li>\n</ol>\n<h2 id=\"极端通用型\"><a href=\"#极端通用型\" class=\"headerlink\" title=\"极端通用型\"></a>极端通用型</h2><p>使用google翻译插件</p>\n<p><a href=\"https://support.google.com/translate/#googtrans/en/zh-CN&amp;topic=7011755\">https://support.google.com/translate/#googtrans/en/zh-CN&amp;topic=7011755</a></p>\n<p>适用项目：</p>\n<p>内容庞大且不在乎准确性，时效性强，更新频繁，支持世界语言</p>\n<p>实例：</p>\n<p>阿里国际卖场 <a href=\"https://www.aliexpress.com/\">https://www.aliexpress.com/</a><br><img src=\"http://img.blog.csdn.net/20161219164851113?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2lsbHNwYWNl/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"这里写图片描述\"></p>\n<h2 id=\"项目结合：\"><a href=\"#项目结合：\" class=\"headerlink\" title=\"项目结合：\"></a>项目结合：</h2><ol>\n<li>以异步code形式传递信息的，适合做前端国际化</li>\n<li>同步模板式的项目，可使用后端做国际化，如果想轻后端，也可以做前端国际化或者前后端结合做国际化</li>\n</ol>\n<h2 id=\"两个例子\"><a href=\"#两个例子\" class=\"headerlink\" title=\"两个例子\"></a>两个例子</h2><ol>\n<li>普通异步项目：<br> <strong>nej/jquery项目</strong><br> 如果仅需要支持中文和英文，建议使用第二种形式，如果需要支持多国语言，建议使用第一种形式，code错误码可以添加标记定向到国际版错误信息</li>\n<li>组件式项目：<br> <strong>Regular/Angular/React…项目</strong><br> 因为数据双向绑定和组件化的特点，可以将国际化版本做在组件里，    通过标记继承控制版本的显示，利用路由系统解析hash值，如： <pre><code>&apos;#/cn/s1&apos; : 中文页面S1\n&apos;#/s1&apos; : 页面S1\n&apos;#/en/s1&apos; : 英文页面S1\n</code></pre></li>\n</ol>\n"},{"title":"封装原生ajax","date":"2016-02-02T12:14:46.000Z","_content":"目使用时手动写的封装，如有不对不足之处还请指出，谢谢\n直接上代码吧，没啥说的。\n<!-- more -->\n```\nvar _$ajax = (function() {\n\t\t/**\n\t\t* 生产XHR兼容IE6\n\t\t*/\n        var createXHR = function(){\n            if(typeof XMLHttpRequest != \"undefined\"){ // 非IE6浏览器\n                return new XMLHttpRequest();\n            }else if(typeof ActiveXObject != \"undefined\"){   // IE6浏览器\n                var version = [\n                    \"MSXML2.XMLHttp.6.0\",\n                    \"MSXML2.XMLHttp.3.0\",\n                    \"MSXML2.XMLHttp\",\n                ];\n                for(var i = 0; i < version.length; i++){\n                    try{\n                        return new ActiveXObject(version[i]);\n                    }catch(e){\n                        //跳过\n                    }\n                }\n            }else{\n                throw new Error(\"您的系统或浏览器不支持XHR对象！\");\n            }\n        };\n\t\t/**\n\t\t* 将JSON格式转化为字符串\n\t\t*/\n        var formatParams = function(data) {\n            var arr = [];\n            for (var name in data) {\n                arr.push(name + \"=\" + data[name]);\n            }\n            arr.push(\"nocache=\" + new Date().getTime());\n            return arr.join(\"&\");\n        };\n\t\t/**\n\t\t* 字符串转换为JSON对象，兼容IE6\n\t\t*/\n        var _getJson = (function() {\n            var e = function (e) {\n                try {\n                    return new Function(\"return \" + e)()\n                } catch (n) {\n                    return null\n                }\n            };\n            return function (n) {\n                if (\"string\" != typeof n)return n;\n                try {\n                    if (window.JSON && JSON.parse)return JSON.parse(n)\n                } catch (t) {\n                }\n                return e(n)\n            };\n        })();\n\t\t\n\t\t/**\n\t\t* 回调函数\n\t\t*/\n        var callBack = function (xhr,options) {\n            if (xhr.readyState == 4 && !options.requestDone) {\n                var status = xhr.status;\n                if (status >= 200 && status < 300) {\n                    options.success && options.success(_getJson(xhr.responseText));\n                } else {\n                    options.error && options.error();\n                }\n                //清空状态\n                this.xhr = null;\n                clearTimeout(options.reqTimeout);\n            }else if(!options.requestDone){\n\t            //设置超时\n                if(!options.reqTimeout) {\n                    options.reqTimeout = setTimeout(function () {\n                        options.requestDone = true;\n                        !!this.xhr && this.xhr.abort();\n                        clearTimeout(options.reqTimeout);\n                    }, !options.timeout ? 5000 : options.timeout);\n                }\n            }\n        };\n        return function (options) {\n            options = options || {};\n            options.requestDone = false;\n            options.type = (options.type || \"GET\").toUpperCase();\n            options.dataType = options.dataType || \"json\";\n            options.contentType = options.contentType || \"application/x-www-form-urlencoded\";\n            options.async = options.async || true;\n            var params = options.data;\n\n            //创建 - 第一步\n            var xhr = createXHR();\n\n            //接收 - 第三步\n            if(options.async === true) {\n\n                xhr.onreadystatechange = function () {\n                    callBack(xhr,options);\n                };\n            }\n\n            //连接 和 发送 - 第二步\n            if (options.type == \"GET\") {\n                params = formatParams(params);\n                xhr.open(\"GET\", options.url + \"?\" + params, options.async);\n                xhr.send(null);\n            } else if (options.type == \"POST\") {\n                xhr.open(\"POST\", options.url, options.async);\n                //设置表单提交时的内容类型\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n                xhr.send(params);\n            }\n            // 同步\n            if(options.async === false){\n                callBack(xhr,options);\n            }\n\n        }\n    })();\n```","source":"_posts/封装原生ajax.md","raw":"---\ntitle: 封装原生ajax\ndate: 2016-02-02 20:14:46\ntags: \"ajax\"\n---\n目使用时手动写的封装，如有不对不足之处还请指出，谢谢\n直接上代码吧，没啥说的。\n<!-- more -->\n```\nvar _$ajax = (function() {\n\t\t/**\n\t\t* 生产XHR兼容IE6\n\t\t*/\n        var createXHR = function(){\n            if(typeof XMLHttpRequest != \"undefined\"){ // 非IE6浏览器\n                return new XMLHttpRequest();\n            }else if(typeof ActiveXObject != \"undefined\"){   // IE6浏览器\n                var version = [\n                    \"MSXML2.XMLHttp.6.0\",\n                    \"MSXML2.XMLHttp.3.0\",\n                    \"MSXML2.XMLHttp\",\n                ];\n                for(var i = 0; i < version.length; i++){\n                    try{\n                        return new ActiveXObject(version[i]);\n                    }catch(e){\n                        //跳过\n                    }\n                }\n            }else{\n                throw new Error(\"您的系统或浏览器不支持XHR对象！\");\n            }\n        };\n\t\t/**\n\t\t* 将JSON格式转化为字符串\n\t\t*/\n        var formatParams = function(data) {\n            var arr = [];\n            for (var name in data) {\n                arr.push(name + \"=\" + data[name]);\n            }\n            arr.push(\"nocache=\" + new Date().getTime());\n            return arr.join(\"&\");\n        };\n\t\t/**\n\t\t* 字符串转换为JSON对象，兼容IE6\n\t\t*/\n        var _getJson = (function() {\n            var e = function (e) {\n                try {\n                    return new Function(\"return \" + e)()\n                } catch (n) {\n                    return null\n                }\n            };\n            return function (n) {\n                if (\"string\" != typeof n)return n;\n                try {\n                    if (window.JSON && JSON.parse)return JSON.parse(n)\n                } catch (t) {\n                }\n                return e(n)\n            };\n        })();\n\t\t\n\t\t/**\n\t\t* 回调函数\n\t\t*/\n        var callBack = function (xhr,options) {\n            if (xhr.readyState == 4 && !options.requestDone) {\n                var status = xhr.status;\n                if (status >= 200 && status < 300) {\n                    options.success && options.success(_getJson(xhr.responseText));\n                } else {\n                    options.error && options.error();\n                }\n                //清空状态\n                this.xhr = null;\n                clearTimeout(options.reqTimeout);\n            }else if(!options.requestDone){\n\t            //设置超时\n                if(!options.reqTimeout) {\n                    options.reqTimeout = setTimeout(function () {\n                        options.requestDone = true;\n                        !!this.xhr && this.xhr.abort();\n                        clearTimeout(options.reqTimeout);\n                    }, !options.timeout ? 5000 : options.timeout);\n                }\n            }\n        };\n        return function (options) {\n            options = options || {};\n            options.requestDone = false;\n            options.type = (options.type || \"GET\").toUpperCase();\n            options.dataType = options.dataType || \"json\";\n            options.contentType = options.contentType || \"application/x-www-form-urlencoded\";\n            options.async = options.async || true;\n            var params = options.data;\n\n            //创建 - 第一步\n            var xhr = createXHR();\n\n            //接收 - 第三步\n            if(options.async === true) {\n\n                xhr.onreadystatechange = function () {\n                    callBack(xhr,options);\n                };\n            }\n\n            //连接 和 发送 - 第二步\n            if (options.type == \"GET\") {\n                params = formatParams(params);\n                xhr.open(\"GET\", options.url + \"?\" + params, options.async);\n                xhr.send(null);\n            } else if (options.type == \"POST\") {\n                xhr.open(\"POST\", options.url, options.async);\n                //设置表单提交时的内容类型\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n                xhr.send(params);\n            }\n            // 同步\n            if(options.async === false){\n                callBack(xhr,options);\n            }\n\n        }\n    })();\n```","slug":"封装原生ajax","published":1,"updated":"2017-05-16T13:23:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3b610rh0009xwxslo9r2kho","content":"<p>目使用时手动写的封装，如有不对不足之处还请指出，谢谢<br>直接上代码吧，没啥说的。<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div></pre></td><td class=\"code\"><pre><div class=\"line\">var _$ajax = (function() &#123;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 生产XHR兼容IE6</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var createXHR = function()&#123;</div><div class=\"line\">            if(typeof XMLHttpRequest != &quot;undefined&quot;)&#123; // 非IE6浏览器</div><div class=\"line\">                return new XMLHttpRequest();</div><div class=\"line\">            &#125;else if(typeof ActiveXObject != &quot;undefined&quot;)&#123;   // IE6浏览器</div><div class=\"line\">                var version = [</div><div class=\"line\">                    &quot;MSXML2.XMLHttp.6.0&quot;,</div><div class=\"line\">                    &quot;MSXML2.XMLHttp.3.0&quot;,</div><div class=\"line\">                    &quot;MSXML2.XMLHttp&quot;,</div><div class=\"line\">                ];</div><div class=\"line\">                for(var i = 0; i &lt; version.length; i++)&#123;</div><div class=\"line\">                    try&#123;</div><div class=\"line\">                        return new ActiveXObject(version[i]);</div><div class=\"line\">                    &#125;catch(e)&#123;</div><div class=\"line\">                        //跳过</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;else&#123;</div><div class=\"line\">                throw new Error(&quot;您的系统或浏览器不支持XHR对象！&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 将JSON格式转化为字符串</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var formatParams = function(data) &#123;</div><div class=\"line\">            var arr = [];</div><div class=\"line\">            for (var name in data) &#123;</div><div class=\"line\">                arr.push(name + &quot;=&quot; + data[name]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            arr.push(&quot;nocache=&quot; + new Date().getTime());</div><div class=\"line\">            return arr.join(&quot;&amp;&quot;);</div><div class=\"line\">        &#125;;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 字符串转换为JSON对象，兼容IE6</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var _getJson = (function() &#123;</div><div class=\"line\">            var e = function (e) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    return new Function(&quot;return &quot; + e)()</div><div class=\"line\">                &#125; catch (n) &#123;</div><div class=\"line\">                    return null</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;;</div><div class=\"line\">            return function (n) &#123;</div><div class=\"line\">                if (&quot;string&quot; != typeof n)return n;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    if (window.JSON &amp;&amp; JSON.parse)return JSON.parse(n)</div><div class=\"line\">                &#125; catch (t) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">                return e(n)</div><div class=\"line\">            &#125;;</div><div class=\"line\">        &#125;)();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 回调函数</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var callBack = function (xhr,options) &#123;</div><div class=\"line\">            if (xhr.readyState == 4 &amp;&amp; !options.requestDone) &#123;</div><div class=\"line\">                var status = xhr.status;</div><div class=\"line\">                if (status &gt;= 200 &amp;&amp; status &lt; 300) &#123;</div><div class=\"line\">                    options.success &amp;&amp; options.success(_getJson(xhr.responseText));</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    options.error &amp;&amp; options.error();</div><div class=\"line\">                &#125;</div><div class=\"line\">                //清空状态</div><div class=\"line\">                this.xhr = null;</div><div class=\"line\">                clearTimeout(options.reqTimeout);</div><div class=\"line\">            &#125;else if(!options.requestDone)&#123;</div><div class=\"line\">\t            //设置超时</div><div class=\"line\">                if(!options.reqTimeout) &#123;</div><div class=\"line\">                    options.reqTimeout = setTimeout(function () &#123;</div><div class=\"line\">                        options.requestDone = true;</div><div class=\"line\">                        !!this.xhr &amp;&amp; this.xhr.abort();</div><div class=\"line\">                        clearTimeout(options.reqTimeout);</div><div class=\"line\">                    &#125;, !options.timeout ? 5000 : options.timeout);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        return function (options) &#123;</div><div class=\"line\">            options = options || &#123;&#125;;</div><div class=\"line\">            options.requestDone = false;</div><div class=\"line\">            options.type = (options.type || &quot;GET&quot;).toUpperCase();</div><div class=\"line\">            options.dataType = options.dataType || &quot;json&quot;;</div><div class=\"line\">            options.contentType = options.contentType || &quot;application/x-www-form-urlencoded&quot;;</div><div class=\"line\">            options.async = options.async || true;</div><div class=\"line\">            var params = options.data;</div><div class=\"line\"></div><div class=\"line\">            //创建 - 第一步</div><div class=\"line\">            var xhr = createXHR();</div><div class=\"line\"></div><div class=\"line\">            //接收 - 第三步</div><div class=\"line\">            if(options.async === true) &#123;</div><div class=\"line\"></div><div class=\"line\">                xhr.onreadystatechange = function () &#123;</div><div class=\"line\">                    callBack(xhr,options);</div><div class=\"line\">                &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            //连接 和 发送 - 第二步</div><div class=\"line\">            if (options.type == &quot;GET&quot;) &#123;</div><div class=\"line\">                params = formatParams(params);</div><div class=\"line\">                xhr.open(&quot;GET&quot;, options.url + &quot;?&quot; + params, options.async);</div><div class=\"line\">                xhr.send(null);</div><div class=\"line\">            &#125; else if (options.type == &quot;POST&quot;) &#123;</div><div class=\"line\">                xhr.open(&quot;POST&quot;, options.url, options.async);</div><div class=\"line\">                //设置表单提交时的内容类型</div><div class=\"line\">                xhr.setRequestHeader(&quot;Content-Type&quot;, options.contentType);</div><div class=\"line\">                xhr.send(params);</div><div class=\"line\">            &#125;</div><div class=\"line\">            // 同步</div><div class=\"line\">            if(options.async === false)&#123;</div><div class=\"line\">                callBack(xhr,options);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)();</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>目使用时手动写的封装，如有不对不足之处还请指出，谢谢<br>直接上代码吧，没啥说的。<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div></pre></td><td class=\"code\"><pre><div class=\"line\">var _$ajax = (function() &#123;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 生产XHR兼容IE6</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var createXHR = function()&#123;</div><div class=\"line\">            if(typeof XMLHttpRequest != &quot;undefined&quot;)&#123; // 非IE6浏览器</div><div class=\"line\">                return new XMLHttpRequest();</div><div class=\"line\">            &#125;else if(typeof ActiveXObject != &quot;undefined&quot;)&#123;   // IE6浏览器</div><div class=\"line\">                var version = [</div><div class=\"line\">                    &quot;MSXML2.XMLHttp.6.0&quot;,</div><div class=\"line\">                    &quot;MSXML2.XMLHttp.3.0&quot;,</div><div class=\"line\">                    &quot;MSXML2.XMLHttp&quot;,</div><div class=\"line\">                ];</div><div class=\"line\">                for(var i = 0; i &lt; version.length; i++)&#123;</div><div class=\"line\">                    try&#123;</div><div class=\"line\">                        return new ActiveXObject(version[i]);</div><div class=\"line\">                    &#125;catch(e)&#123;</div><div class=\"line\">                        //跳过</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;else&#123;</div><div class=\"line\">                throw new Error(&quot;您的系统或浏览器不支持XHR对象！&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 将JSON格式转化为字符串</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var formatParams = function(data) &#123;</div><div class=\"line\">            var arr = [];</div><div class=\"line\">            for (var name in data) &#123;</div><div class=\"line\">                arr.push(name + &quot;=&quot; + data[name]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            arr.push(&quot;nocache=&quot; + new Date().getTime());</div><div class=\"line\">            return arr.join(&quot;&amp;&quot;);</div><div class=\"line\">        &#125;;</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 字符串转换为JSON对象，兼容IE6</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var _getJson = (function() &#123;</div><div class=\"line\">            var e = function (e) &#123;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    return new Function(&quot;return &quot; + e)()</div><div class=\"line\">                &#125; catch (n) &#123;</div><div class=\"line\">                    return null</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;;</div><div class=\"line\">            return function (n) &#123;</div><div class=\"line\">                if (&quot;string&quot; != typeof n)return n;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    if (window.JSON &amp;&amp; JSON.parse)return JSON.parse(n)</div><div class=\"line\">                &#125; catch (t) &#123;</div><div class=\"line\">                &#125;</div><div class=\"line\">                return e(n)</div><div class=\"line\">            &#125;;</div><div class=\"line\">        &#125;)();</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t/**</div><div class=\"line\">\t\t* 回调函数</div><div class=\"line\">\t\t*/</div><div class=\"line\">        var callBack = function (xhr,options) &#123;</div><div class=\"line\">            if (xhr.readyState == 4 &amp;&amp; !options.requestDone) &#123;</div><div class=\"line\">                var status = xhr.status;</div><div class=\"line\">                if (status &gt;= 200 &amp;&amp; status &lt; 300) &#123;</div><div class=\"line\">                    options.success &amp;&amp; options.success(_getJson(xhr.responseText));</div><div class=\"line\">                &#125; else &#123;</div><div class=\"line\">                    options.error &amp;&amp; options.error();</div><div class=\"line\">                &#125;</div><div class=\"line\">                //清空状态</div><div class=\"line\">                this.xhr = null;</div><div class=\"line\">                clearTimeout(options.reqTimeout);</div><div class=\"line\">            &#125;else if(!options.requestDone)&#123;</div><div class=\"line\">\t            //设置超时</div><div class=\"line\">                if(!options.reqTimeout) &#123;</div><div class=\"line\">                    options.reqTimeout = setTimeout(function () &#123;</div><div class=\"line\">                        options.requestDone = true;</div><div class=\"line\">                        !!this.xhr &amp;&amp; this.xhr.abort();</div><div class=\"line\">                        clearTimeout(options.reqTimeout);</div><div class=\"line\">                    &#125;, !options.timeout ? 5000 : options.timeout);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        return function (options) &#123;</div><div class=\"line\">            options = options || &#123;&#125;;</div><div class=\"line\">            options.requestDone = false;</div><div class=\"line\">            options.type = (options.type || &quot;GET&quot;).toUpperCase();</div><div class=\"line\">            options.dataType = options.dataType || &quot;json&quot;;</div><div class=\"line\">            options.contentType = options.contentType || &quot;application/x-www-form-urlencoded&quot;;</div><div class=\"line\">            options.async = options.async || true;</div><div class=\"line\">            var params = options.data;</div><div class=\"line\"></div><div class=\"line\">            //创建 - 第一步</div><div class=\"line\">            var xhr = createXHR();</div><div class=\"line\"></div><div class=\"line\">            //接收 - 第三步</div><div class=\"line\">            if(options.async === true) &#123;</div><div class=\"line\"></div><div class=\"line\">                xhr.onreadystatechange = function () &#123;</div><div class=\"line\">                    callBack(xhr,options);</div><div class=\"line\">                &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            //连接 和 发送 - 第二步</div><div class=\"line\">            if (options.type == &quot;GET&quot;) &#123;</div><div class=\"line\">                params = formatParams(params);</div><div class=\"line\">                xhr.open(&quot;GET&quot;, options.url + &quot;?&quot; + params, options.async);</div><div class=\"line\">                xhr.send(null);</div><div class=\"line\">            &#125; else if (options.type == &quot;POST&quot;) &#123;</div><div class=\"line\">                xhr.open(&quot;POST&quot;, options.url, options.async);</div><div class=\"line\">                //设置表单提交时的内容类型</div><div class=\"line\">                xhr.setRequestHeader(&quot;Content-Type&quot;, options.contentType);</div><div class=\"line\">                xhr.send(params);</div><div class=\"line\">            &#125;</div><div class=\"line\">            // 同步</div><div class=\"line\">            if(options.async === false)&#123;</div><div class=\"line\">                callBack(xhr,options);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)();</div></pre></td></tr></table></figure></p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj3b610qz0000xwxsi6sj41h1","tag_id":"cj3b610r70002xwxsky72ukk7","_id":"cj3b610rg0007xwxsmg88532k"},{"post_id":"cj3b610r30001xwxsmbe2b01j","tag_id":"cj3b610rf0006xwxsf0qqcra8","_id":"cj3b610rk000bxwxshgaajzas"},{"post_id":"cj3b610rd0005xwxsz81z1r6s","tag_id":"cj3b610rj000axwxslldlhcwl","_id":"cj3b610rk000dxwxs03nucx80"},{"post_id":"cj3b610rg0008xwxsrwfq8c8k","tag_id":"cj3b610rk000cxwxsygsf1ky3","_id":"cj3b610rl000fxwxs4m4r2ddf"},{"post_id":"cj3b610rh0009xwxslo9r2kho","tag_id":"cj3b610rl000exwxsx95o1e59","_id":"cj3b610rl000gxwxs9yrgjewo"}],"Tag":[{"name":"css","_id":"cj3b610r70002xwxsky72ukk7"},{"name":"hexo","_id":"cj3b610rf0006xwxsf0qqcra8"},{"name":"openVPN","_id":"cj3b610rj000axwxslldlhcwl"},{"name":"国际化","_id":"cj3b610rk000cxwxsygsf1ky3"},{"name":"ajax","_id":"cj3b610rl000exwxsx95o1e59"}]}}